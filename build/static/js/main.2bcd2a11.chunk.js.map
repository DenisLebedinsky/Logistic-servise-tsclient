{"version":3,"sources":["components/Error/Error.module.scss","serviceWorker.ts","redux/reducers/auth/types.ts","api/index.ts","redux/reducers/auth/actions.ts","redux/reducers/auth/saga.ts","redux/reducers/packages/types.ts","redux/reducers/packages/actions.ts","redux/reducers/packages/saga.ts","redux/reducers/locations/types.ts","redux/reducers/locations/actions.ts","redux/reducers/locations/saga.ts","redux/reducers/qrCode/types.ts","redux/reducers/qrCode/actions.ts","redux/reducers/qrCode/saga.ts","redux/reducers/users/types.ts","redux/reducers/users/actions.ts","redux/reducers/users/saga.ts","redux/sagas/index.ts","redux/reducers/auth/reducer.ts","constants/packages.ts","redux/reducers/packages/reducer.ts","redux/reducers/qrCode/reducer.ts","redux/reducers/users/reducer.ts","redux/reducers/locations/reducer.ts","redux/reducers/index.ts","redux/store.ts","redux/reducers/auth/selectors.ts","containers/NavBar/NavBar.tsx","containers/Authentication/Authentication.tsx","redux/reducers/packages/selectors.ts","containers/Barcode/Barcode.jsx","redux/reducers/qrCode/selectors.ts","containers/Packages/BarcodeModal/BarcodeModal.tsx","components/Error/Error.tsx","redux/reducers/locations/selectors.ts","containers/Packages/CreatePackageModal/CreatePackageModal.tsx","containers/Packages/EditPackageModal/EditPackageModal.tsx","containers/Packages/Packages.tsx","containers/Locations/LocationsModal/LocationsModal.tsx","containers/Locations/Locations.tsx","redux/reducers/users/selectors.ts","containers/Users/UserModal/UserModal.tsx","containers/Users/Users.tsx","App.tsx","index.tsx","containers/Packages/Packages.module.scss","containers/Users/UserModal/UserModal.module.scss","containers/Packages/EditPackageModal/EditPackageModal.module.scss","containers/Packages/CreatePackageModal/CreatePackageModal.module.scss","containers/Locations/Locations.module.scss","containers/Users/Users.module.scss","containers/Locations/LocationsModal/LocationsModal.module.scss","containers/NavBar/NavBar.module.scss","containers/Authentication/Authentication.module.scss","containers/Packages/BarcodeModal/BarcodeModal.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","AuthActionTypes","api","axios","create","baseURL","process","loginSuccess","successData","action","LOG_IN_SUCCESS","getUserInfoSuccess","GET_USER_INFO_SUCCESS","loginSaga","logoutSaga","userInfoSaga","watchLoginSaga","watchLogoutSaga","watchUserInfoSaga","authSaga","post","payload","result","Error","loading","user","username","data","token","role","locationId","id","error","localStorage","setItem","JSON","stringify","put","message","LOG_IN_FAIL","removeItem","defaults","headers","common","Authorization","GET_USER_INFO_FAIL","takeEvery","LOG_IN","LOG_OUT","GET_USER_INFO","all","fork","PackagesActionTypes","addPackageSuccess","newPackage","ADD_PACKAGE_SUCCESS","getPackagesSaga","addPackageSaga","updatePackageSaga","deletePackagesSaga","watchGetPackageSaga","watchAddPackageSaga","watchUpdatePackageSaga","watchDeletePackageSaga","watchColumsVisibleSaga","packagesSaga","skip","limit","packages","GET_PACKAGES_SUCCESS","GET_PACKAGES_FAIL","ADD_PACKAGE_FAIL","editedPackage","updatedPackage","UPDATE_PACKAGE_SUCCESS","UPDATE_PACKAGE_FAIL","deletedPackage","DELETE_PACKAGE_SUCCESS","DELETE_PACKAGE_FAIL","changeColumsVisible","columns","GET_PACKAGES","ADD_PACKAGE","UPDATE_PACKAGE","DELETE_PACKAGE","CHANGE_COLUMNS_VISIBLE","LocationsActionTypes","getLocations","GET_LOCATIONS","addLocationSuccess","newLocation","ADD_LOCATION_SUCCESS","getLocationsSaga","addLocationSaga","updateLocationSaga","deleteLocationSaga","watchGetLocationsSaga","watchAddLocationSaga","watchUpdateLocationSaga","watchDeleteLocationSaga","locationsSaga","locations","GET_LOCATIONS_SUCCESS","GET_LOCATIONS_FAIL","ADD_LOCATION_FAIL","editedLocation","updatedLocation","UPDATE_LOCATION_SUCCESS","UPDATE_LOCATION_FAIL","deletedLocation","DELETE_LOCATION_SUCCESS","DELETE_LOCATION_FAIL","ADD_LOCATION","UPDATE_LOCATION","DELETE_LOCATION","QRCodeActionTypes","getQRCodeSaga","watchGetQRCodeSaga","qrCodeSaga","qrCode","qr","GET_QR_CODE_SUCCESS","GET_QR_CODE_FAIL","GET_QR_CODE","UsersActionTypes","getUsers","GET_USERS","addUserSuccess","newUser","ADD_USER_SUCCESS","getUsersSaga","addUserSaga","updateUsersaga","deleteUsersaga","watchGetUsersSaga","watchAddUsersaga","watchUpdateUsersaga","watchDeleteUsersaga","usersSaga","users","GET_USERS_SUCCESS","err","GET_USERS_FAIL","ADD_USER_FAIL","editedUser","updatedUser","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","ADD_USER","UPDATE_USER","DELETE_USER","rootSaga","localUserJSON","getItem","initialState","parse","reducer","state","type","erroe","allColumns","visibleColumns","lcoalStorageColumns","count","addedPackage","CLEAR_MODAL","CLEAR_QR_CODE","combineReducers","auth","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","getAuth","NavBar","useState","path","setPath","useReactRouter","history","useSelector","dispatch","useDispatch","useEffect","pathname","push","a11yProps","index","AppBar","position","Toolbar","className","styles","toolbar","Tabs","value","onChange","event","newValue","Tab","label","Typography","variant","title","onClick","icon","Authentication","login","setlogin","password","setPassword","setErrors","setLoading","Container","maxWidth","container","noValidate","autoComplete","onSubmit","e","authData","preventDefault","CircularProgress","TextField","textField","target","margin","Button","color","button","getPackagesFromState","getResultAdding","getResultUpdating","Barcode","componentRef","useRef","n","arr","qrCount","setqrCount","src","alt","newArr","i","printImgCount","trigger","content","current","ref","map","el","key","reciveLoc","qrCodeFromState","BarcodeModal","closeModal","containerModal","barcodeModal","iconClose","msg","getLocationsFromState","ModalForm","items","setItems","setTitle","setCount","created","setCreated","status","readOnly","setReadOnly","reciverId","setReciverId","sendLocIdTitle","setSendLocIdTitle","locationsData","resultAdding","length","_id","getReciverId","find","formContainer","closeIcon","userLocation","res","getUserLocation","getReciveLoc","Autocomplete","options","option","renderInput","params","placeholder","fullWidth","InputProps","itemInput","textFieldTitle","textFieldCount","parseInt","fontSize","newItems","concat","List","component","aria-label","style","maxHeight","overflow","item","ListItem","ListItemText","primary","filter","delItem","footer","transit","date","undefined","sendLocId","sendfactLocId","userId","inventory","sendLocationId","sendUserId","ModalFormEdit","editData","dataItems","locationsState","resultUpdating","initialSendLocIdTitle","initialReciverId","freeSolo","disableClearable","qrElement","Packages","modalData","setModalData","showModal","setShowModal","showModalEdit","setShowEditModal","showModalCreate","setShowModalCreate","currentIndex","setCurrentIndex","React","page","setPage","rowsPerPage","setRowsPerPage","anchorEl","setAnchorEl","changeColumnsView","column","newColumns","includes","cl","slice","checkColumn","fetchData","getPackages","closeEdit","closeCreateModal","setTimeout","spiner","buttonGroup","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","open","onClose","MenuItem","menuItems","menuIcon","Paper","root","Table","table","borderColor","stickyHeader","TableHead","TableRow","TableCell","align","cellNumber","transitBlock1","transitBlock2","transitBlock3","TableBody","packageItem","indexRow","rowGrey","scope","number","moment","format","name","note","driverFullname","regNumber","factReciverId","sendData","reciveData","recipientId","cellInventory","lastList","list","transitLastRow","transitRow","recivedDate","toLowerCase","StatusDelivered","converStatus","comment","actions","a","async","handleOpenModalBarcode","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","rows","labelRowsPerPage","labelDisplayedRows","from","to","Modal","aria-labelledby","aria-describedby","modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","EditPackageModal","CreatePackageModal","LocationsModal","editLocation","edit","setErr","addLocation","Locations","LocationsData","setOpen","setEditLocation","handleClose","size","actionEdit","headerModal","getUserFromState","editUser","initialUser","nameErr","loginErr","pswErr","phone","locationIdErr","setUser","inputLabel","labelWidth","setLabelWidth","offsetWidth","hasOwnProperty","FormControl","formControl","InputLabel","Select","dataErr","phoneErr","addUser","Users","usersData","setEditUser","TableContainer","del","App","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2bcd2a11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__3xgvB\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export type Auth = {\r\n  loading: boolean;\r\n  user: {\r\n    username: string;\r\n    token: string;\r\n    role: string;\r\n    locationId: string;\r\n    id: string;\r\n  };\r\n  error: boolean;\r\n};\r\n\r\nexport enum AuthActionTypes {\r\n  LOG_IN = '@@auth/LOG_IN',\r\n  LOG_IN_SUCCESS = '@@auth/LOG_IN_SUCCESS',\r\n  LOG_IN_FAIL = '@@auth/LOG_IN_FAIL',\r\n  LOG_OUT = '@@auth/LOG_OUT',\r\n  \r\n  GET_USER_INFO = \"@@auth/GET_USER_INFO\",\r\n  GET_USER_INFO_SUCCESS = \"@@auth/GET_USER_INFO_SUCCESS\",\r\n  GET_USER_INFO_FAIL = \"@@auth/GET_USER_INFO_FAIL\"\r\n}\r\n\r\nexport type AuthData = {\r\n  login: string;\r\n  password: string;\r\n};\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_SERVER\r\n});\r\n\r\nexport default api;\r\n","import { action } from 'typesafe-actions';\r\n\r\nimport { AuthActionTypes, AuthData,Auth } from './types';\r\n\r\n// login\r\nexport const loginStart = (authData: AuthData) =>\r\n  action(AuthActionTypes.LOG_IN, authData);\r\n\r\nexport const loginSuccess = (successData: Auth) =>\r\n  action(AuthActionTypes.LOG_IN_SUCCESS, successData);\r\n\r\nexport const loginFail = (error: string) =>\r\n  action(AuthActionTypes.LOG_IN_FAIL, { error});\r\n\r\nexport const logout = () => action(AuthActionTypes.LOG_OUT); \r\n\r\n//get ingo about auth user\r\nexport const getUserInfo = (token: string) => action(AuthActionTypes.GET_USER_INFO, token);\r\n\r\nexport const getUserInfoSuccess = (successData: Auth) =>\r\n  action(AuthActionTypes.GET_USER_INFO_SUCCESS,  successData);\r\n\r\nexport const getUserInfoFail = (error: string) =>\r\n  action(AuthActionTypes.GET_USER_INFO_FAIL, { error });\r\n","import { all, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport api from 'api';\r\n\r\nimport { Auth, AuthActionTypes } from './types';\r\nimport {\r\n  getUserInfo,\r\n  getUserInfoFail,\r\n  getUserInfoSuccess,\r\n  loginFail,\r\n  loginStart,\r\n  loginSuccess,\r\n  logout\r\n} from './actions';\r\n\r\nfunction* loginSaga(action: ReturnType<typeof loginStart>) {\r\n  try {\r\n    const result: any = yield api.post('/users/login', action.payload);\r\n\r\n    if (!result) {\r\n      throw new Error('Forbidden');\r\n    }\r\n\r\n    const successData: Auth = {\r\n      loading: false,\r\n      user: {\r\n        username: result.data.username,\r\n        token: result.data.token,\r\n        role: result.data.role,\r\n        locationId: result.data.locationId,\r\n        id: result.data.id\r\n      },\r\n      error: false\r\n    };\r\n\r\n    localStorage.setItem('user', JSON.stringify(result.data));\r\n\r\n    yield put(loginSuccess(successData));\r\n  } catch (e) {\r\n    yield put(loginFail(e.message));\r\n  }\r\n}\r\n\r\nfunction* logoutSaga(action: ReturnType<typeof logout>) {\r\n  yield localStorage.removeItem('user');\r\n}\r\n\r\nfunction* userInfoSaga(action: ReturnType<typeof getUserInfo>) {\r\n  try {\r\n    api.defaults.headers.common.Authorization = `Baerer ${action.payload}`;\r\n\r\n    const result: any = yield api.post('/users/getByToken');\r\n\r\n    if (!result) {\r\n      throw new Error('Forbidden');\r\n    }\r\n\r\n    const successData: Auth = { ...result.data, token: action.payload };\r\n\r\n    yield put(getUserInfoSuccess(successData));\r\n  } catch (e) {\r\n    yield put(getUserInfoFail(e.message));\r\n  }\r\n}\r\n\r\n// wathers\r\nfunction* watchLoginSaga() {\r\n  yield takeEvery(AuthActionTypes.LOG_IN, loginSaga);\r\n}\r\n\r\nfunction* watchLogoutSaga() {\r\n  yield takeEvery(AuthActionTypes.LOG_OUT, logoutSaga);\r\n}\r\n\r\nfunction* watchUserInfoSaga() {\r\n  yield takeEvery(AuthActionTypes.GET_USER_INFO, userInfoSaga);\r\n}\r\n\r\n// main\r\nfunction* authSaga() {\r\n  yield all([\r\n    fork(watchLoginSaga),\r\n    fork(watchLogoutSaga),\r\n    fork(watchUserInfoSaga)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","type Inventory = {\r\n  title: string;\r\n  count: number;\r\n  _id?: string;\r\n};\r\n\r\ntype User = {\r\n  name: string;\r\n  _id: string;\r\n  role: string;\r\n  phone: string;\r\n};\r\n\r\ntype PopulationField = {\r\n  title: string;\r\n  _id?: string;\r\n};\r\n\r\ntype Transit = {\r\n  _id: string;\r\n  date: string;\r\n  recivedDate: string;\r\n  sendLocId: PopulationField;\r\n  sendfactLocId: PopulationField;\r\n  userId: User;\r\n};\r\n\r\ntype Note = {\r\n  regNumber: string;\r\n  driverFullname: string;\r\n};\r\n\r\nexport type Package = {\r\n  _id: string;\r\n  number: number;\r\n  sendLocationId: PopulationField;\r\n  sendUserId: User;\r\n  reciverId: PopulationField;\r\n  factReciverId: PopulationField;\r\n  sendData: string;\r\n  reciveData: string;\r\n  recipientId: User;\r\n  inventory: Inventory[];\r\n  transit: Transit[];\r\n  status: string;\r\n  note: Note;\r\n  comment: string;\r\n  created: string;\r\n  qr?: string;\r\n};\r\n\r\ntype TransitEditable = {\r\n  sendLocId: PopulationField | string;\r\n  userId?: User;\r\n  _id?: string;\r\n  date?: string;\r\n  recivedDate?: string;\r\n  sendfactLocId?: PopulationField | string;\r\n};\r\n\r\nexport type Item = {\r\n  title: string;\r\n  count: number;\r\n};\r\n\r\nexport type ReadOnly = {\r\n  status: boolean;\r\n  qr: string;\r\n  id: string;\r\n};\r\n\r\nexport type addNewPackage = {\r\n  reciverId: string;\r\n  transit: {\r\n    date: undefined;\r\n    sendLocId: {\r\n      title: string;\r\n    };\r\n    sendfactLocId: undefined;\r\n    userId: undefined;\r\n  }[];\r\n  inventory: Item[];\r\n  sendLocationId: string;\r\n};\r\n\r\nexport type PackageEditable = {\r\n  _id: string;\r\n  number: number;\r\n  sendLocationId: PopulationField | string;\r\n  sendUserId: User;\r\n  reciverId: PopulationField | string;\r\n  factReciverId: PopulationField | string;\r\n  sendData: string;\r\n  reciveData: string;\r\n  recipientId: User;\r\n  inventory: Inventory[];\r\n  transit: TransitEditable[];\r\n  status: string;\r\n  comment: string;\r\n  created: string;\r\n};\r\n\r\nexport interface PackageType {\r\n  loading: boolean;\r\n  error: boolean;\r\n  packages: Package[];\r\n  count: number;\r\n  columns: string[];\r\n  addedPackage: Package | null;\r\n  updatedPackage: Package | null;\r\n}\r\n\r\nexport enum PackagesActionTypes {\r\n  GET_PACKAGES = '@@packages/GET_PACKAGES',\r\n  GET_PACKAGES_SUCCESS = '@@packages/GET_PACKAGES_SUCCESS',\r\n  GET_PACKAGES_FAIL = '@@packages/GET_PACKAGES_FAIL',\r\n\r\n  ADD_PACKAGE = '@@packages/ADD_PACKAGE',\r\n  ADD_PACKAGE_SUCCESS = '@@packages/ADD_PACKAGE_SUCCESS',\r\n  ADD_PACKAGE_FAIL = '@@packages/ADD_PACKAGE_FAIL',\r\n\r\n  UPDATE_PACKAGE = '@@packages/UPDATE_PACKAGE',\r\n  UPDATE_PACKAGE_SUCCESS = '@@packages/UPDATE_PACKAGE_SUCCESS',\r\n  UPDATE_PACKAGE_FAIL = '@@packages/UPDATE_PACKAGE_FAIL',\r\n\r\n  DELETE_PACKAGE = '@@packages/DELETE_PACKAGE',\r\n  DELETE_PACKAGE_SUCCESS = '@@packages/DELETE_PACKAGE_SUCCESS',\r\n  DELETE_PACKAGE_FAIL = '@@packages/DELETE_PACKAGE_FAIL',\r\n\r\n  CLEAR_MODAL = '@@packages/CLEAR_MODAL',\r\n\r\n  CHANGE_COLUMNS_VISIBLE = '@@packages/CHANGE_COLUMNS_VISIBLE'\r\n}\r\n","import { action } from 'typesafe-actions';\r\n\r\nimport {\r\n  Package,\r\n  PackagesActionTypes,\r\n  PackageEditable,\r\n  addNewPackage\r\n} from './types';\r\n\r\n// get\r\nexport const getPackages = (token: string, skip: number, limit: number) =>\r\n  action(PackagesActionTypes.GET_PACKAGES, { token, skip, limit });\r\n\r\nexport const getPackagesSuccess = (packages: Package[]) =>\r\n  action(PackagesActionTypes.GET_PACKAGES_SUCCESS, packages);\r\n\r\nexport const getPackagesFail = (error: string) =>\r\n  action(PackagesActionTypes.GET_PACKAGES_FAIL, error);\r\n\r\n// add\r\nexport const addPackage = (token: string, newPackage: addNewPackage) =>\r\n  action(PackagesActionTypes.ADD_PACKAGE, { token, newPackage });\r\n\r\nexport const addPackageSuccess = (newPackage: Package) =>\r\n  action(PackagesActionTypes.ADD_PACKAGE_SUCCESS, newPackage);\r\n\r\nexport const addPackageFail = (error: string) =>\r\n  action(PackagesActionTypes.ADD_PACKAGE_FAIL, error);\r\n\r\n// update\r\nexport const updatePackage = (token: string, editedPackage: PackageEditable) =>\r\n  action(PackagesActionTypes.UPDATE_PACKAGE, { token, editedPackage });\r\n\r\nexport const updatePackageSuccess = (updatedPackage: Package) =>\r\n  action(PackagesActionTypes.UPDATE_PACKAGE_SUCCESS, updatedPackage);\r\n\r\nexport const updatePackageFail = (error: string) =>\r\n  action(PackagesActionTypes.UPDATE_PACKAGE_FAIL, error);\r\n\r\n// delete\r\nexport const deletePackage = (token: string, id: string) =>\r\n  action(PackagesActionTypes.DELETE_PACKAGE, { token, id });\r\n\r\nexport const deletePackageSuccess = (deletedPackage: Package) =>\r\n  action(PackagesActionTypes.DELETE_PACKAGE_SUCCESS, deletedPackage);\r\n\r\nexport const deletePackageFail = (error: string) =>\r\n  action(PackagesActionTypes.DELETE_PACKAGE_FAIL, error);\r\n\r\nexport const clearModalStart = () => action(PackagesActionTypes.CLEAR_MODAL);\r\n\r\n// change columns visible\r\nexport const changeColumnsVisible = (columns: string[]) =>\r\n  action(PackagesActionTypes.CHANGE_COLUMNS_VISIBLE, { columns });\r\n","import { all, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport api from 'api';\r\n\r\nimport { PackagesActionTypes } from './types';\r\nimport {\r\n  addPackage,\r\n  addPackageFail,\r\n  addPackageSuccess,\r\n  deletePackage,\r\n  deletePackageFail,\r\n  deletePackageSuccess,\r\n  getPackages,\r\n  getPackagesFail,\r\n  getPackagesSuccess,\r\n  updatePackage,\r\n  updatePackageFail,\r\n  updatePackageSuccess,\r\n  changeColumnsVisible\r\n} from './actions';\r\n\r\nfunction* getPackagesSaga(action: ReturnType<typeof getPackages>) {\r\n  try {\r\n    const { token, skip, limit } = action.payload;\r\n\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/package/', { skip, limit });\r\n\r\n    if (!result.data) {\r\n      throw new Error('error with get data');\r\n    }\r\n    yield put(getPackagesSuccess(result.data));\r\n  } catch (error) {\r\n    yield put(getPackagesFail(error));\r\n  }\r\n}\r\n\r\nfunction* addPackageSaga(action: ReturnType<typeof addPackage>) {\r\n  try {\r\n    const { token, newPackage } = action.payload;\r\n\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/package/create', newPackage);\r\n\r\n    if (!result) {\r\n      throw new Error('error with get update');\r\n    }\r\n\r\n    yield put(addPackageSuccess(result.data));\r\n  } catch (error) {\r\n    yield put(addPackageFail(error));\r\n  }\r\n}\r\n\r\nfunction* updatePackageSaga(action: ReturnType<typeof updatePackage>) {\r\n  try {\r\n    const { token, editedPackage } = action.payload;\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/package/update/', editedPackage);\r\n\r\n    if (!result) {\r\n      throw new Error('error with get data');\r\n    }\r\n\r\n    yield put(updatePackageSuccess(result.data));\r\n  } catch (error) {\r\n    yield put(updatePackageFail(error));\r\n  }\r\n}\r\n\r\nfunction* deletePackagesSaga(action: ReturnType<typeof deletePackage>) {\r\n  try {\r\n    const { token, id } = action.payload;\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/package/delete', { id });\r\n\r\n    if (!result) {\r\n      throw new Error('error with get data');\r\n    }\r\n\r\n    yield put(deletePackageSuccess(result.data));\r\n  } catch (error) {\r\n    yield put(deletePackageFail(error));\r\n  }\r\n}\r\n\r\nfunction changeColumsVisible(action: ReturnType<typeof changeColumnsVisible>) {\r\n  const { columns } = action.payload;\r\n  localStorage.setItem('columns', JSON.stringify(columns));\r\n}\r\n\r\n// watchers\r\nfunction* watchGetPackageSaga() {\r\n  yield takeEvery(PackagesActionTypes.GET_PACKAGES, getPackagesSaga);\r\n}\r\n\r\nfunction* watchAddPackageSaga() {\r\n  yield takeEvery(PackagesActionTypes.ADD_PACKAGE, addPackageSaga);\r\n}\r\n\r\nfunction* watchUpdatePackageSaga() {\r\n  yield takeEvery(PackagesActionTypes.UPDATE_PACKAGE, updatePackageSaga);\r\n}\r\n\r\nfunction* watchDeletePackageSaga() {\r\n  yield takeEvery(PackagesActionTypes.DELETE_PACKAGE, deletePackagesSaga);\r\n}\r\n\r\nfunction* watchColumsVisibleSaga() {\r\n  yield takeEvery(\r\n    PackagesActionTypes.CHANGE_COLUMNS_VISIBLE,\r\n    changeColumsVisible\r\n  );\r\n}\r\n// main\r\nfunction* packagesSaga() {\r\n  yield all([\r\n    fork(watchGetPackageSaga),\r\n    fork(watchAddPackageSaga),\r\n    fork(watchUpdatePackageSaga),\r\n    fork(watchDeletePackageSaga),\r\n    fork(watchColumsVisibleSaga)\r\n  ]);\r\n}\r\n\r\nexport default packagesSaga;\r\n","export type Location = {\r\n  _id: string;\r\n  title: string;\r\n  created: string;\r\n};\r\n\r\nexport interface Locations {\r\n  loading: boolean;\r\n  error: boolean;\r\n  locations: Location[];\r\n}\r\n\r\nexport interface AddLocation {\r\n  title: string;\r\n}\r\n\r\nexport interface UpdateLocation {\r\n  id: string;\r\n  title: string;\r\n}\r\n\r\nexport enum LocationsActionTypes {\r\n  GET_LOCATIONS = '@@LOCATIONS/GET_LOCATIONS',\r\n  GET_LOCATIONS_SUCCESS = '@@LOCATIONS/GET_LOCATIONS_SUCCESS',\r\n  GET_LOCATIONS_FAIL = '@@LOCATIONS/GET_LOCATIONS_FAIL',\r\n\r\n  ADD_LOCATION = '@@LOCATIONS/ADD_LOCATION',\r\n  ADD_LOCATION_SUCCESS = '@@LOCATIONS/ADD_LOCATION_SUCCESS',\r\n  ADD_LOCATION_FAIL = '@@LOCATIONS/ADD_LOCATION_FAIL',\r\n\r\n  UPDATE_LOCATION = '@@LOCATIONS/UPDATE_LOCATION',\r\n  UPDATE_LOCATION_SUCCESS = '@@LOCATIONS/UPDATE_LOCATION_SUCCESS',\r\n  UPDATE_LOCATION_FAIL = '@@LOCATIONS/UPDATE_LOCATION_FAIL',\r\n\r\n  DELETE_LOCATION = '@@LOCATIONS/DELETE_LOCATION',\r\n  DELETE_LOCATION_SUCCESS = '@@LOCATIONS/DELETE_LOCATION_SUCCESS',\r\n  DELETE_LOCATION_FAIL = '@@LOCATIONS/DELETE_LOCATION_FAIL'\r\n}\r\n","import { action } from 'typesafe-actions';\r\n\r\nimport { Location, LocationsActionTypes, AddLocation, UpdateLocation } from './types';\r\n\r\n// get\r\nexport const getLocations = (token: string, skip: number, limit: number) =>\r\n  action(LocationsActionTypes.GET_LOCATIONS, { token, skip, limit });\r\n\r\nexport const getLocationsSuccess = (locations: Location[]) =>\r\n  action(LocationsActionTypes.GET_LOCATIONS_SUCCESS, locations);\r\n\r\nexport const getLocationsFail = (error: string) =>\r\n  action(LocationsActionTypes.GET_LOCATIONS_FAIL, error);\r\n\r\n// add\r\nexport const addLocation = (token: string, newLocation: AddLocation) =>\r\n  action(LocationsActionTypes.ADD_LOCATION, { token, newLocation });\r\n\r\nexport const addLocationSuccess = (newLocation: Location) =>\r\n  action(LocationsActionTypes.ADD_LOCATION_SUCCESS, newLocation);\r\n\r\nexport const addLocationFail = (error: string) =>\r\n  action(LocationsActionTypes.ADD_LOCATION_FAIL, error);\r\n\r\n\r\n// update\r\nexport const updateLocation = (token: string, editedLocation: UpdateLocation) =>\r\n  action(LocationsActionTypes.UPDATE_LOCATION, { token, editedLocation });\r\n\r\nexport const updateLocationSuccess = (updatedLocation: Location) =>\r\n  action(LocationsActionTypes.UPDATE_LOCATION_SUCCESS, updatedLocation);\r\n\r\nexport const updateLocationFail = (error: string) =>\r\n  action(LocationsActionTypes.UPDATE_LOCATION_FAIL, error);\r\n\r\n// delete\r\nexport const deleteLocation = (token: string, id: string) =>\r\n  action(LocationsActionTypes.DELETE_LOCATION, { token, id });\r\n\r\nexport const deleteLocationSuccess = (deletedLocation: Location) =>\r\n  action(LocationsActionTypes.DELETE_LOCATION_SUCCESS, deletedLocation);\r\n\r\nexport const deleteLocationFail = (error: string) =>\r\n  action(LocationsActionTypes.DELETE_LOCATION_FAIL, error);\r\n\r\n","import { all, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport api from 'api';\r\n\r\nimport { LocationsActionTypes } from './types';\r\n\r\nimport {\r\n  addLocation,\r\n  addLocationFail,\r\n  addLocationSuccess,\r\n  deleteLocation,\r\n  deleteLocationFail,\r\n  deleteLocationSuccess,\r\n  getLocations,\r\n  getLocationsFail,\r\n  getLocationsSuccess,\r\n  updateLocation,\r\n  updateLocationFail,\r\n  updateLocationSuccess\r\n} from './actions';\r\n\r\nfunction* getLocationsSaga(action: ReturnType<typeof getLocations>) {\r\n  try {\r\n    const { token, skip, limit } = action.payload;\r\n\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/locations/', { skip, limit });\r\n\r\n    if (!result) {\r\n      throw new Error('error with get data');\r\n    }\r\n\r\n    yield put(getLocationsSuccess(result.data));\r\n  } catch (error) {\r\n    yield put(getLocationsFail(error));\r\n  }\r\n}\r\n\r\nfunction* addLocationSaga(action: ReturnType<typeof addLocation>) {\r\n  try {\r\n    const { token, newLocation } = action.payload;\r\n\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/locations/create', newLocation);\r\n\r\n    if (!result) {\r\n      throw new Error('error with get update');\r\n    }\r\n\r\n    yield put(addLocationSuccess(result.data));\r\n    yield put(getLocations(token, 0, 1000));\r\n  } catch (error) {\r\n    yield put(addLocationFail(error));\r\n  }\r\n}\r\n\r\nfunction* updateLocationSaga(action: ReturnType<typeof updateLocation>) {\r\n  try {\r\n    const { token, editedLocation } = action.payload;\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/locations/update/', editedLocation);\r\n\r\n    if (!result) {\r\n      throw new Error('error with get data');\r\n    }\r\n\r\n    yield put(updateLocationSuccess(result.data));\r\n\r\n    yield put(getLocations(token, 0, 1000));\r\n  } catch (error) {\r\n    yield put(updateLocationFail(error));\r\n  }\r\n}\r\n\r\nfunction* deleteLocationSaga(action: ReturnType<typeof deleteLocation>) {\r\n  try {\r\n    const { token, id } = action.payload;\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/locations/delete', { id });\r\n\r\n    if (!result) {\r\n      throw new Error('error with get data');\r\n    }\r\n\r\n    yield put(deleteLocationSuccess(result.data));\r\n    yield put(getLocations(token, 0, 1000));\r\n  } catch (error) {\r\n    yield put(deleteLocationFail(error));\r\n  }\r\n}\r\n\r\n// watchers\r\nfunction* watchGetLocationsSaga() {\r\n  yield takeEvery(LocationsActionTypes.GET_LOCATIONS, getLocationsSaga);\r\n}\r\n\r\nfunction* watchAddLocationSaga() {\r\n  yield takeEvery(LocationsActionTypes.ADD_LOCATION, addLocationSaga);\r\n}\r\n\r\nfunction* watchUpdateLocationSaga() {\r\n  yield takeEvery(LocationsActionTypes.UPDATE_LOCATION, updateLocationSaga);\r\n}\r\n\r\nfunction* watchDeleteLocationSaga() {\r\n  yield takeEvery(LocationsActionTypes.DELETE_LOCATION, deleteLocationSaga);\r\n}\r\n// main\r\nfunction* locationsSaga() {\r\n  yield all([\r\n    fork(watchGetLocationsSaga),\r\n    fork(watchAddLocationSaga),\r\n    fork(watchUpdateLocationSaga),\r\n    fork(watchDeleteLocationSaga)\r\n  ]);\r\n}\r\n\r\nexport default locationsSaga;\r\n","export interface QRCode {\r\n  qr: string;\r\n}\r\n\r\nexport interface QRCodeType {\r\n  loading: boolean;\r\n  error: boolean;\r\n  qr: string;\r\n}\r\n\r\nexport enum QRCodeActionTypes {\r\n  GET_QR_CODE = '@@qrCode/GET_QR_CODE',\r\n  GET_QR_CODE_SUCCESS = '@@qrCode/GET_QR_CODE_SUCCESS',\r\n  GET_QR_CODE_FAIL = '@@qrCode/GET_QR_CODE_FAIL',\r\n\r\n  CLEAR_QR_CODE = '@@qrCode/CLEAR_QR_CODE'\r\n}\r\n","import { action } from 'typesafe-actions';\r\n\r\nimport { QRCode, QRCodeActionTypes } from './types';\r\n\r\nexport const getQRCode = (token: string, id: string) =>\r\n  action(QRCodeActionTypes.GET_QR_CODE, { token, id });\r\n\r\nexport const getQRCodeSuccess = (qrCode: QRCode) =>\r\n  action(QRCodeActionTypes.GET_QR_CODE_SUCCESS, qrCode);\r\n\r\nexport const getQRCodeFail = (error: string) =>\r\n  action(QRCodeActionTypes.GET_QR_CODE_FAIL, error);\r\n\r\nexport const clearQRcode = () => action(QRCodeActionTypes.CLEAR_QR_CODE);\r\n","import { all, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport api from 'api';\r\n\r\nimport { QRCodeActionTypes } from './types';\r\nimport { getQRCode, getQRCodeFail, getQRCodeSuccess } from './actions';\r\n\r\nfunction* getQRCodeSaga(action: ReturnType<typeof getQRCode>) {\r\n  try {\r\n    const { token, id } = action.payload;\r\n\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/package/getBarcode', { id });\r\n\r\n    if (!result) {\r\n      throw new Error('error with get data');\r\n    }\r\n    yield put(getQRCodeSuccess({ qr: result.data }));\r\n  } catch (error) {\r\n    yield put(getQRCodeFail(error));\r\n  }\r\n}\r\n\r\n// watchers\r\nfunction* watchGetQRCodeSaga() {\r\n  yield takeEvery(QRCodeActionTypes.GET_QR_CODE, getQRCodeSaga);\r\n}\r\n// main\r\nfunction* qrCodeSaga() {\r\n  yield all([fork(watchGetQRCodeSaga)]);\r\n}\r\n\r\nexport default qrCodeSaga;\r\n","export type User = {\r\n  name: string;\r\n  login: string;\r\n  phone: string;\r\n  role: string;\r\n  locationId: {\r\n    _id: string;\r\n    title: string;\r\n  };\r\n  _id: string;\r\n};\r\n\r\nexport type UserEditable = {\r\n  id: string;\r\n  name: string;\r\n  login: string;\r\n  password: string;\r\n  phone: string;\r\n  role: string;\r\n  locationId: string;\r\n};\r\n\r\nexport type UserAdded = {\r\n  name: string;\r\n  login: string;\r\n  password: string;\r\n  phone: string;\r\n  role: string;\r\n  locationId: string;\r\n};\r\n\r\nexport type UserType = {\r\n  loading: boolean;\r\n  error: boolean;\r\n  users: User[];\r\n};\r\n\r\nexport enum UsersActionTypes {\r\n  GET_USERS = '@@users/GET_USERS',\r\n  GET_USERS_SUCCESS = '@@users/GET_USERS_SUCCESS',\r\n  GET_USERS_FAIL = '@@users/GET_USERS_FAIL',\r\n\r\n  ADD_USER = '@@users/ADD_USER',\r\n  ADD_USER_SUCCESS = '@@users/ADD_USER_SUCCESS',\r\n  ADD_USER_FAIL = '@@users/ADD_USER_FAIL',\r\n\r\n  UPDATE_USER = '@@users/UPDATE_USER',\r\n  UPDATE_USER_SUCCESS = '@@users/UPDATE_USER_SUCCESS',\r\n  UPDATE_USER_FAIL = '@@users/UPDATE_USER_FAIL',\r\n\r\n  DELETE_USER = '@@users/DELETE_USER',\r\n  DELETE_USER_SUCCESS = '@@users/DELETE_USER_SUCCESS',\r\n  DELETE_USER_FAIL = '@@users/DELETE_USER_FAIL'\r\n}\r\n","import { action } from 'typesafe-actions';\r\n\r\nimport { User, UsersActionTypes, UserEditable, UserAdded} from './types';\r\n\r\nexport const getUsers = (token: string, skip: number, limit: number) =>\r\n  action(UsersActionTypes.GET_USERS, { token, skip, limit });\r\n\r\nexport const getUsersSuccess = (users: User[]) =>\r\n  action(UsersActionTypes.GET_USERS_SUCCESS, users);\r\n\r\nexport const getUsersFail = (err: string) =>\r\n  action(UsersActionTypes.GET_USERS_FAIL, { error: err });\r\n\r\n// add\r\nexport const addUser = (token: string, newUser: UserAdded) =>\r\n  action(UsersActionTypes.ADD_USER, { token, newUser });\r\n\r\nexport const addUserSuccess = (newUser: User) =>\r\n  action(UsersActionTypes.ADD_USER_SUCCESS, newUser);\r\n\r\nexport const addUserFail = (error: string) =>\r\n  action(UsersActionTypes.ADD_USER_FAIL, error);\r\n\r\n// update\r\nexport const updateUser = (token: string, editedUser: UserEditable) =>\r\n  action(UsersActionTypes.UPDATE_USER, { token, editedUser });\r\n\r\nexport const updateUserSuccess = (updatedUser: User) =>\r\n  action(UsersActionTypes.UPDATE_USER_SUCCESS, updatedUser);\r\n\r\nexport const updateUserFail = (error: string) =>\r\n  action(UsersActionTypes.UPDATE_USER_FAIL, error);\r\n\r\n// delete\r\nexport const deleteUser = (token: string, id: string) =>\r\n  action(UsersActionTypes.DELETE_USER, { token, id });\r\n\r\nexport const deleteUserSuccess = (deletedLocation: Location) =>\r\n  action(UsersActionTypes.DELETE_USER_SUCCESS, deletedLocation);\r\n\r\nexport const deleteUserFail = (error: string) =>\r\n  action(UsersActionTypes.DELETE_USER_FAIL, error);\r\n","import { all, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport api from 'api';\r\n\r\nimport { UsersActionTypes } from './types';\r\nimport {\r\n  addUser,\r\n  addUserFail,\r\n  addUserSuccess,\r\n  deleteUser,\r\n  deleteUserFail,\r\n  deleteUserSuccess,\r\n  getUsers,\r\n  getUsersFail,\r\n  getUsersSuccess,\r\n  updateUser,\r\n  updateUserFail,\r\n  updateUserSuccess\r\n} from './actions';\r\n\r\nfunction* getUsersSaga(action: ReturnType<typeof getUsers>) {\r\n  try {\r\n    const { token, skip, limit } = action.payload;\r\n\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/users/', { skip, limit });\r\n\r\n    if (!result) {\r\n      throw new Error('error with get data');\r\n    }\r\n\r\n    yield put(getUsersSuccess(result.data));\r\n  } catch (error) {\r\n    yield put(getUsersFail(error));\r\n  }\r\n}\r\n\r\nfunction* addUserSaga(action: ReturnType<typeof addUser>) {\r\n  try {\r\n    const { token, newUser } = action.payload;\r\n\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/users/create', newUser);\r\n\r\n    if (!result) {\r\n      throw new Error('error with get update');\r\n    }\r\n\r\n    yield put(addUserSuccess(result.data));\r\n    yield put(getUsers(token, 0, 1000));\r\n  } catch (error) {\r\n    yield put(addUserFail(error));\r\n  }\r\n}\r\n\r\nfunction* updateUsersaga(action: ReturnType<typeof updateUser>) {\r\n  try {\r\n    const { token, editedUser } = action.payload;\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/users/update/', editedUser);\r\n\r\n    if (!result) {\r\n      throw new Error('error with get data');\r\n    }\r\n\r\n    yield put(updateUserSuccess(result.data));\r\n    yield put(getUsers(token, 0, 1000));\r\n  } catch (error) {\r\n    yield put(updateUserFail(error));\r\n  }\r\n}\r\n\r\nfunction* deleteUsersaga(action: ReturnType<typeof deleteUser>) {\r\n  try {\r\n    const { token, id } = action.payload;\r\n    api.defaults.headers.common.Authorization = `Baerer ${token}`;\r\n\r\n    const result: any = yield api.post('/users/delete', { id });\r\n\r\n    if (!result) {\r\n      throw new Error('error with get data');\r\n    }\r\n\r\n    yield put(deleteUserSuccess(result.data));\r\n    yield put(getUsers(token, 0, 1000));\r\n  } catch (error) {\r\n    yield put(deleteUserFail(error));\r\n  }\r\n}\r\n\r\n// watchers\r\nfunction* watchGetUsersSaga() {\r\n  yield takeEvery(UsersActionTypes.GET_USERS, getUsersSaga);\r\n}\r\n\r\nfunction* watchAddUsersaga() {\r\n  yield takeEvery(UsersActionTypes.ADD_USER, addUserSaga);\r\n}\r\n\r\nfunction* watchUpdateUsersaga() {\r\n  yield takeEvery(UsersActionTypes.UPDATE_USER, updateUsersaga);\r\n}\r\n\r\nfunction* watchDeleteUsersaga() {\r\n  yield takeEvery(UsersActionTypes.DELETE_USER, deleteUsersaga);\r\n}\r\n// main\r\nfunction* usersSaga() {\r\n  yield all([\r\n    fork(watchGetUsersSaga),\r\n    fork(watchAddUsersaga),\r\n    fork(watchUpdateUsersaga),\r\n    fork(watchDeleteUsersaga)\r\n  ]);\r\n}\r\n\r\nexport default usersSaga;\r\n","import { all, fork } from 'redux-saga/effects';\r\n\r\nimport authSaga from '../reducers/auth/saga';\r\nimport packagesSaga from '../reducers/packages/saga';\r\nimport locationsSaga from '../reducers/locations/saga';\r\nimport qrCodeSaga from '../reducers/qrCode/saga';\r\nimport usersSaga from '../reducers/users/saga';\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    fork(authSaga),\r\n    fork(packagesSaga),\r\n    fork(locationsSaga),\r\n    fork(qrCodeSaga),\r\n    fork(usersSaga)\r\n  ]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { Reducer } from 'redux';\r\n\r\nimport { Auth, AuthActionTypes } from './types';\r\n\r\nconst localUserJSON = localStorage.getItem('user');\r\nconst localToken = localUserJSON ? JSON.parse(localUserJSON).token : '';\r\n\r\nconst initialState: Auth = {\r\n  loading: false,\r\n  user: {\r\n    username: '',\r\n    token: localToken,\r\n    role: '',\r\n    locationId: '',\r\n    id: ''\r\n  },\r\n  error: false\r\n};\r\n\r\nconst reducer: Reducer<Auth> = (state: Auth = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case AuthActionTypes.LOG_IN:\r\n      return state;\r\n    \r\n      case AuthActionTypes.LOG_IN_SUCCESS:\r\n      return { ...state, ...payload };\r\n    \r\n      case AuthActionTypes.LOG_IN_FAIL:\r\n      return { ...state, error: true };\r\n\r\n    case AuthActionTypes.LOG_OUT:\r\n      return {\r\n        loading: false,\r\n        user: {\r\n          username: '',\r\n          token: '',\r\n          role: '',\r\n          locationId: '',\r\n          id: ''\r\n        },\r\n        error: false\r\n      };\r\n\r\n    case AuthActionTypes.GET_USER_INFO:\r\n      return state;\r\n    \r\n      case AuthActionTypes.GET_USER_INFO_SUCCESS:\r\n      return { ...state, user: payload };\r\n    \r\n      case AuthActionTypes.GET_USER_INFO_FAIL:\r\n      return { ...state, erroe: true };\r\n    \r\n      default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const allColumns = [\r\n  'Номер',\r\n  'Дата создания',\r\n  'Отправитель',\r\n  'Начальный получатель',\r\n  'Примечание',\r\n  'Фактический получатель',\r\n  'Дата отправки',\r\n  'Дата получения',\r\n  'Принял',\r\n  'Опись вложения',\r\n  'Транзит',\r\n  'Статус',\r\n  'Комментарий'\r\n];\r\n","import { Reducer } from 'redux';\r\n\r\nimport { PackageType, PackagesActionTypes } from './types';\r\nimport { allColumns } from 'constants/packages';\r\n\r\nlet visibleColumns = allColumns;\r\nconst lcoalStorageColumns = localStorage.getItem('columns');\r\nif (lcoalStorageColumns) {\r\n  visibleColumns = JSON.parse(lcoalStorageColumns);\r\n}\r\n\r\nconst initialState: PackageType = {\r\n  loading: true,\r\n  error: false,\r\n  packages: [],\r\n  count: 0,\r\n  columns: visibleColumns,\r\n  addedPackage: null,\r\n  updatedPackage: null\r\n};\r\n\r\nconst reducer: Reducer<PackageType> = (\r\n  state: PackageType = initialState,\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case PackagesActionTypes.GET_PACKAGES:\r\n      return { ...state, error: false, loading: true };\r\n    case PackagesActionTypes.GET_PACKAGES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        packages: payload.data,\r\n        count: payload.count\r\n      };\r\n    case PackagesActionTypes.GET_PACKAGES_FAIL:\r\n      return { ...state, error: true, loading: false };\r\n    case PackagesActionTypes.ADD_PACKAGE_SUCCESS:\r\n      return { ...state, addedPackage: payload };\r\n    case PackagesActionTypes.UPDATE_PACKAGE_SUCCESS:\r\n      return { ...state, updatedPackage: payload };\r\n    case PackagesActionTypes.CLEAR_MODAL:\r\n      return { ...state, addedPackage: null, updatedPackage: null };\r\n    case PackagesActionTypes.CHANGE_COLUMNS_VISIBLE:\r\n      return { ...state, columns: payload.columns };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { Reducer } from 'redux';\r\n\r\nimport { QRCodeActionTypes, QRCodeType } from './types';\r\n\r\nconst initialState: QRCodeType = {\r\n  error: false,\r\n  loading: true,\r\n  qr: ''\r\n};\r\n\r\nconst reducer: Reducer<QRCodeType> = (\r\n  state: QRCodeType = initialState,\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case QRCodeActionTypes.GET_QR_CODE:\r\n      return { ...state, error: true, loading: true };\r\n    case QRCodeActionTypes.GET_QR_CODE_SUCCESS:\r\n      return { loading: false, error: false, qr: payload.qr };\r\n    case QRCodeActionTypes.GET_QR_CODE_FAIL:\r\n      return { ...state, error: true };\r\n    case QRCodeActionTypes.CLEAR_QR_CODE:\r\n      return { ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { Reducer } from 'redux';\r\n\r\nimport { UserType, UsersActionTypes } from './types';\r\n\r\nconst initialState: UserType = {\r\n  loading: false,\r\n  error: false,\r\n  users: []\r\n};\r\n\r\nconst reducer: Reducer<UserType> = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case UsersActionTypes.GET_USERS:\r\n      return state;\r\n    case UsersActionTypes.GET_USERS_SUCCESS:\r\n      return { ...state, users: payload };\r\n    case UsersActionTypes.GET_USERS_FAIL:\r\n      return { ...state, ...payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { Reducer } from 'redux';\r\n\r\nimport { Locations, LocationsActionTypes } from './types';\r\n\r\nconst initialState: Locations = {\r\n  loading: false,\r\n  error: false,\r\n  locations: []\r\n};\r\n\r\nconst reducer: Reducer<Locations> = (\r\n  state: Locations = initialState,\r\n  action\r\n) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LocationsActionTypes.GET_LOCATIONS:\r\n      return { ...state, error: true, loading: true };\r\n    case LocationsActionTypes.GET_LOCATIONS_SUCCESS:\r\n      return { loading: false, error: false, locations: payload };\r\n    case LocationsActionTypes.GET_LOCATIONS_FAIL:\r\n      return { ...state, error: true };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth/reducer';\r\nimport packages from './packages/reducer';\r\nimport qrCode from './qrCode/reducer';\r\nimport users from './users/reducer';\r\nimport locations from './locations/reducer';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  packages,\r\n  qrCode,\r\n  users,\r\n  locations\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nimport rootSaga from './sagas';\r\nimport reducers from './reducers';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nexport default store;\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import { AppState } from 'redux/store.type';\r\n\r\nexport const getAuth = (state: AppState) => state.auth;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport useReactRouter from 'use-react-router';\r\nimport { getAuth } from 'redux/reducers/auth/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout, getUserInfo } from 'redux/reducers/auth/actions';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Auth } from 'redux/reducers/auth/types';\r\nimport styles from './NavBar.module.scss';\r\n\r\nconst NavBar: React.FC = () => {\r\n  const [path, setPath] = useState(0);\r\n  const { history, location } = useReactRouter();\r\n  const auth: Auth = useSelector(getAuth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!auth.user.token && location.pathname !== '/login') {\r\n      history.push('/login');\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      auth.user.token &&\r\n      (auth.user.username === '' ||\r\n        auth.user.locationId === '' ||\r\n        auth.user.role === '' ||\r\n        auth.user.id === '')\r\n    ) {\r\n      dispatch(getUserInfo(auth.user.token));\r\n    }\r\n  }, [auth.user.token]);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/' && path !== 0) {\r\n      setPath(0);\r\n    }\r\n\r\n    if (location.pathname === '/users' && path !== 1) {\r\n      setPath(1);\r\n    }\r\n\r\n    if (location.pathname === '/locations' && path !== 2) {\r\n      setPath(2);\r\n    }\r\n  }, [location.pathname, path]);\r\n\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n    history.push('/');\r\n  };\r\n\r\n  const a11yProps = (index: number) => {\r\n    return {\r\n      id: `action-tab-${index}`,\r\n      'aria-controls': `action-tabpanel-${index}`\r\n    };\r\n  };\r\n\r\n  const handleChange = (event: any, newValue: number) => {\r\n    setPath(newValue);\r\n    if (newValue === 0) {\r\n      history.push('/');\r\n    }\r\n\r\n    if (newValue === 1) {\r\n      history.push('/users');\r\n    }\r\n\r\n    if (newValue === 2) {\r\n      history.push('/locations');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      {auth.user.token && (\r\n        <Toolbar className={styles.toolbar}>\r\n          <Tabs value={path} onChange={handleChange}>\r\n            <Tab label=\"Отправления\" {...a11yProps(0)} />\r\n\r\n            {auth && auth.user.role === 'admin' && (\r\n              <Tab label=\"Пользователи\" {...a11yProps(1)} />\r\n            )}\r\n\r\n            {auth && auth.user.role === 'admin' && (\r\n              <Tab label=\"Локации\" {...a11yProps(2)} />\r\n            )}\r\n          </Tabs>\r\n\r\n          <div className={styles.user}>\r\n            <Typography variant=\"h6\" className={styles.title}>\r\n              {auth.user.username}\r\n            </Typography>\r\n            <ExitToApp id=\"logout\" onClick={logOut} className={styles.icon} />\r\n          </div>\r\n        </Toolbar>\r\n      )}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useReactRouter from 'use-react-router';\r\nimport { loginStart } from 'redux/reducers/auth/actions';\r\nimport { getAuth } from 'redux/reducers/auth/selectors';\r\n\r\nimport { Button, Container, TextField } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport styles from './Authentication.module.scss';\r\n\r\nexport default function Authentication() {\r\n  const [login, setlogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setErrors] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(getAuth);\r\n  const { history } = useReactRouter();\r\n\r\n  const changeLogin = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setlogin(e.target.value);\r\n  };\r\n  const changePass = (e: any) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const sendData = (e: any) => {\r\n    e.preventDefault();\r\n    setErrors(false);\r\n    setLoading(true);\r\n    dispatch(loginStart({ login, password }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.error) {\r\n      setLoading(false);\r\n      setErrors(true);\r\n    } else if (error) {\r\n      setErrors(false);\r\n    }\r\n\r\n    if (auth.user.token) {\r\n      history.push('/');\r\n    }\r\n  }, [auth.error, auth.user.token, error, history]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <form\r\n        className={styles.container}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={sendData}\r\n      >\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <>\r\n            <TextField\r\n              id=\"outlined-login\"\r\n              label=\"Логин\"\r\n              className={styles.textField}\r\n              value={login}\r\n              onChange={changeLogin}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              error={error}\r\n            />\r\n            <TextField\r\n              id=\"outlined-password-input\"\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              onChange={changePass}\r\n              className={styles.textField}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              value={password}\r\n              autoComplete=\"off\"\r\n              error={error}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={styles.button}\r\n            >\r\n              Войти\r\n            </Button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { AppState } from 'redux/store.type';\r\n\r\nexport const getPackagesFromState = (state: AppState) => state.packages;\r\n\r\nexport const getResultAdding = (state: AppState) => state.packages.addedPackage;\r\n\r\nexport const getResultUpdating = (state: AppState) =>\r\n  state.packages.updatedPackage;\r\n","import ReactToPrint from 'react-to-print';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport React, { useRef, useState } from 'react';\r\nimport './Barcode.scss';\r\n\r\nconst Barcode = ({ data }) => {\r\n  const componentRef = useRef();\r\n  const [qrCount, setqrCount] = useState({ n: 1, arr: [1] });\r\n\r\n  const printImgCount = e => {\r\n    const { value } = e.target;\r\n    const newArr = [];\r\n\r\n    for (let i = 0; i < value; i++) {\r\n      newArr.push(i);\r\n    }\r\n\r\n    setqrCount({ n: value, arr: newArr });\r\n  };\r\n\r\n  return (\r\n    <div className=\"barcode\">\r\n      <img\r\n        id=\"myimg\"\r\n        src={data.qr}\r\n        className=\"barcode-item\"\r\n        alt=\"error try restar page\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        className=\"barcode-input\"\r\n        value={qrCount.n}\r\n        onChange={e => printImgCount(e)}\r\n      />\r\n      <ReactToPrint\r\n        trigger={() => (\r\n          <Button variant=\"contained\" className=\"barcode-item\">\r\n            Печать\r\n          </Button>\r\n        )}\r\n        content={() => componentRef.current}\r\n      />\r\n      <div id=\"printQR\" className=\"barcode-notPrint\" ref={componentRef}>\r\n        {qrCount.arr.map((el, i) => (\r\n          <div key={`qr_${i}`} className=\"barcode-block\">\r\n            <img\r\n              src={data.qr}\r\n              alt=\"error restart page\"\r\n              className=\"barcode-block-img\"\r\n            />\r\n            <div className=\"barcode-block-info\">\r\n              <span className=\"barcode-block-value\">Отправитель:</span>\r\n              <span>{data.location}</span>\r\n            </div>\r\n            <div className=\"barcode-block-info\">\r\n              <span className=\"barcode-block-value\">Получатель:</span>\r\n              <span>{data.reciveLoc}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barcode;\r\n","import { AppState } from 'redux/store.type';\r\n\r\nexport const qrCodeFromState = (state: AppState) => state.qrCode.qr;\r\n","import CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Barcode from 'containers/Barcode';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { qrCodeFromState } from 'redux/reducers/qrCode/selectors';\r\nimport { getQRCode } from 'redux/reducers/qrCode/actions';\r\nimport { getAuth } from 'redux/reducers/auth/selectors';\r\n\r\nimport { BarcodeModalFC } from './types';\r\nimport styles from './BarcodeModal.module.scss';\r\n\r\nconst BarcodeModal: React.FC<BarcodeModalFC> = ({ data, closeModal }) => {\r\n  const dispatch = useDispatch();\r\n  const qrCode = useSelector(qrCodeFromState);\r\n  const auth = useSelector(getAuth);\r\n\r\n  useEffect(() => {\r\n    if (!qrCode && data.id) {\r\n      dispatch(getQRCode(auth.user.token, data.id));\r\n    }\r\n  });\r\n\r\n  function handleClose(e: React.MouseEvent) {\r\n    closeModal();\r\n  }\r\n\r\n  return (\r\n    <div id=\"modal-qr\" className={styles.containerModal}>\r\n      <div className={styles.barcodeModal}>\r\n        <div className={styles.iconClose}>\r\n          <CloseIcon onClick={handleClose} />\r\n        </div>\r\n        {qrCode ? (\r\n          <Barcode data={{ ...data, qr: qrCode }} />\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarcodeModal;\r\n","import React from 'react';\r\nimport styles from './Error.module.scss';\r\nimport { ErrorFC } from './types';\r\n\r\nconst Error: React.FC<ErrorFC> = ({ msg }) => {\r\n  return <div className={styles.error}>{msg}</div>;\r\n};\r\nexport default Error;\r\n","import { AppState } from 'redux/store.type';\r\n\r\nexport const getLocationsFromState = (state: AppState) => state.locations;\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\n//import AutoSelectLocation from 'components/Locations/AutoSelectLocation';\r\nimport Barcode from 'containers/Barcode';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getLocationsFromState } from 'redux/reducers/locations/selectors';\r\nimport { getResultAdding } from 'redux/reducers/packages/selectors';\r\nimport { getLocations } from 'redux/reducers/locations/actions';\r\nimport { addPackage } from 'redux/reducers/packages/actions';\r\nimport { Item, ReadOnly } from 'redux/reducers/packages/types';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { CreatePackageModalFC } from './types';\r\nimport styles from './CreatePackageModal.module.scss';\r\nimport './CreatePackage.scss';\r\n\r\nconst ModalForm: React.FC<CreatePackageModalFC> = ({\r\n  create,\r\n  closeModal,\r\n  auth\r\n}) => {\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [title, setTitle] = useState('');\r\n  const [count, setCount] = useState(1);\r\n  const [created, setCreated] = useState(false);\r\n  const [readOnly, setReadOnly] = useState<ReadOnly>({\r\n    status: false,\r\n    qr: '',\r\n    id: ''\r\n  });\r\n  // const [stateInput, setStateInput] = useState({\r\n  //   single: '',\r\n  //   popper: ''\r\n  // });\r\n\r\n  //адрес получателя\r\n  const [reciverId, setReciverId] = useState('');\r\n  // первый транзитный пункт\r\n  const [sendLocIdTitle, setSendLocIdTitle] = useState('');\r\n\r\n  const locationsData = useSelector(getLocationsFromState);\r\n  const resultAdding = useSelector(getResultAdding);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!locationsData.locations.length && !locationsData.loading) {\r\n      dispatch(getLocations(auth.user.token, 0, 1000));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (created && resultAdding) {\r\n      setReadOnly({\r\n        qr: resultAdding.qr || '',\r\n        status: true,\r\n        id: resultAdding._id\r\n      });\r\n      setCreated(false);\r\n    }\r\n  });\r\n\r\n  const getReciverId = () => {\r\n    return (\r\n      locationsData.locations.find(location => location.title === reciverId)\r\n        ?.title || ''\r\n    );\r\n  };\r\n\r\n  const sendData = () => {\r\n    if (reciverId) {\r\n      const transit =\r\n        sendLocIdTitle !== ''\r\n          ? [\r\n              {\r\n                date: undefined,\r\n                sendLocId: { title: sendLocIdTitle },\r\n                sendfactLocId: undefined,\r\n                userId: undefined\r\n              }\r\n            ]\r\n          : [];\r\n      const data = {\r\n        reciverId: getReciverId(),\r\n        transit,\r\n        inventory: items,\r\n        sendLocationId: auth.user.locationId,\r\n        sendUserId: auth.user.id\r\n      };\r\n\r\n      dispatch(addPackage(auth.user.token, data));\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const changeReciverId = (event: ChangeEvent<{}>, value: string | null) => {\r\n    if (value) {\r\n      setReciverId(value);\r\n    }\r\n  };\r\n\r\n  const changeSendLocId = (event: ChangeEvent<{}>, value: string | null) => {\r\n    if (value) {\r\n      setSendLocIdTitle(value);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    closeModal();\r\n  };\r\n\r\n  const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const changeCount = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setCount(parseInt(e.target.value, 10));\r\n  };\r\n\r\n  const addItem = () => {\r\n    if (title !== '' && count !== 0) {\r\n      const newItems = items.concat({ title, count });\r\n\r\n      setItems(newItems);\r\n      setCount(0);\r\n      setTitle('');\r\n    }\r\n  };\r\n\r\n  const delItem = (index: number) => {\r\n    const newItems = items.filter((el, i) => i !== index);\r\n    setItems(newItems);\r\n  };\r\n\r\n  const getReciveLoc = () => {\r\n    const res = locationsData.locations.find(\r\n      el => el._id === reciverId || el.title === reciverId\r\n    );\r\n\r\n    if (res) {\r\n      return res.title;\r\n    }\r\n\r\n    return reciverId;\r\n  };\r\n\r\n  const getUserLocation = () => {\r\n    const userLocation = auth.user.locationId;\r\n    if (userLocation) {\r\n      const res = locationsData.locations.find(el => el._id === userLocation);\r\n      if (res) {\r\n        return res.title;\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <form\r\n      id=\"form-create\"\r\n      className={styles.container}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n      <div className={styles.formContainer}>\r\n        <div className={styles.closeIcon}>\r\n          <h2>\r\n            Опись отправления\r\n            {create && '(создание)'}\r\n          </h2>\r\n          <CloseIcon onClick={handleCloseModal} />\r\n        </div>\r\n\r\n        {readOnly.status && (\r\n          <Barcode\r\n            data={{\r\n              id: readOnly.id,\r\n              qr: readOnly.qr,\r\n              location: getUserLocation(),\r\n              reciveLoc: getReciveLoc()\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {readOnly.status ? (\r\n          <div>\r\n            <span>Адрес получателя:</span>\r\n            <h3>{reciverId}</h3>\r\n            <span>Первый транзитный пункт:</span>\r\n            <h3>{sendLocIdTitle}</h3>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Autocomplete\r\n              id=\"reciverId\"\r\n              onChange={changeReciverId}\r\n              options={locationsData.locations.map(option => option.title)}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Адрес получателя\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Введите адрес\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n            <Autocomplete\r\n              id=\"changeSendLocId\"\r\n              onChange={changeSendLocId}\r\n              options={locationsData.locations.map(option => option.title)}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Первый транзитный пункт\"\r\n                  placeholder=\"Введите адрес\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          <span>Опись вложения:</span>\r\n          {!readOnly.status && (\r\n            <div className={styles.itemInput}>\r\n              <TextField\r\n                id=\"outlined-login\"\r\n                label=\"Номенклатура\"\r\n                className={styles.textFieldTitle}\r\n                value={title}\r\n                onChange={changeTitle}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-login\"\r\n                label=\"шт.\"\r\n                type=\"number\"\r\n                className={styles.textFieldCount}\r\n                value={count}\r\n                onChange={changeCount}\r\n                variant=\"outlined\"\r\n              />\r\n              <AddCircle\r\n                color=\"secondary\"\r\n                className={styles.icon}\r\n                fontSize=\"large\"\r\n                onClick={addItem}\r\n              />\r\n            </div>\r\n          )}\r\n          <List\r\n            component=\"nav\"\r\n            aria-label=\"secondary mailbox folders\"\r\n            style={{ maxHeight: 300, overflow: 'auto' }}\r\n          >\r\n            {items.map((item, i) => (\r\n              <ListItem key={`item_${i}`}>\r\n                <ListItemText primary={`${item.title}`} />\r\n\r\n                <div className={styles.count}>{item.count}</div>\r\n\r\n                {!readOnly.status && <CancelIcon onClick={() => delItem(i)} />}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n        {!readOnly.status && (\r\n          <div className={styles.footer}>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={styles.button}\r\n              onClick={sendData}\r\n            >\r\n              Создать\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { getAuth } from 'redux/reducers/auth/selectors';\r\nimport { updatePackage, deletePackage } from 'redux/reducers/packages/actions';\r\nimport { getLocationsFromState } from 'redux/reducers/locations/selectors';\r\nimport { getLocations } from 'redux/reducers/locations/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useEffect, useState, ChangeEvent } from 'react';\r\nimport { PackageEditable } from 'redux/reducers/packages/types';\r\n\r\nimport styles from './EditPackageModal.module.scss';\r\nimport { EditPackageModalFC } from './types';\r\nimport { getResultUpdating } from 'redux/reducers/packages/selectors';\r\n\r\nconst ModalFormEdit: React.FC<EditPackageModalFC> = ({ data, closeModal }) => {\r\n  const editData: PackageEditable = { ...data };\r\n\r\n  const dataItems = data.inventory\r\n    ? data.inventory.map(el => ({ title: el.title, count: el.count }))\r\n    : [];\r\n\r\n  const dispatch = useDispatch();\r\n  const locationsState = useSelector(getLocationsFromState);\r\n  const resultUpdating = useSelector(getResultUpdating);\r\n  const { user } = useSelector(getAuth);\r\n  const [items, setItems] = useState(dataItems);\r\n  const [title, setTitle] = useState('');\r\n  const [count, setCount] = useState(1);\r\n  const [readOnly, setReadOnly] = useState({\r\n    status: false,\r\n    qr: '',\r\n    id: ''\r\n  });\r\n\r\n  let initialSendLocIdTitle = '';\r\n  if (data.transit.length && typeof data.transit[0].sendLocId !== 'string') {\r\n    initialSendLocIdTitle = data.transit[0].sendLocId.title;\r\n  }\r\n\r\n  let initialReciverId = '';\r\n\r\n  if (typeof data.reciverId !== 'string') {\r\n    initialReciverId = data.reciverId.title;\r\n  }\r\n\r\n  //адрес получателя\r\n  const [reciverId, setReciverId] = useState(initialReciverId);\r\n  // первый транзитный пункт\r\n  const [sendLocIdTitle, setSendLocIdTitle] = useState(initialSendLocIdTitle);\r\n\r\n  const changeReciverId = (event: ChangeEvent<{}>, value: string | null) => {\r\n    if (value) {\r\n      setReciverId(value);\r\n    }\r\n  };\r\n\r\n  const changeSendLocId = (event: ChangeEvent<{}>, value: string | null) => {\r\n    if (value) {\r\n      setSendLocIdTitle(value);\r\n    }\r\n  };\r\n  const getLoc = () => {\r\n    dispatch(getLocations(user.token, 0, 1000));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (locationsState.locations.length === 0 && !locationsState.loading) {\r\n      getLoc();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (resultUpdating) {\r\n      setReadOnly({\r\n        qr: resultUpdating.qr || '',\r\n        status: true,\r\n        id: resultUpdating._id\r\n      });\r\n    }\r\n  });\r\n\r\n  const sendData = () => {\r\n    editData.reciverId = reciverId;\r\n\r\n    if (data.transit && data.transit.length > 0 && editData.transit[0]) {\r\n      if (sendLocIdTitle !== '') {\r\n        editData.transit[0].sendLocId = { title: sendLocIdTitle };\r\n      }\r\n      editData.transit[0].sendLocId =\r\n        sendLocIdTitle !== '' ? { title: sendLocIdTitle } : '';\r\n    } else if (sendLocIdTitle !== '') {\r\n      editData.transit = [\r\n        {\r\n          sendLocId: {\r\n            title: sendLocIdTitle\r\n          }\r\n        }\r\n      ];\r\n    } else {\r\n      editData.transit = [];\r\n    }\r\n\r\n    editData.inventory = items;\r\n\r\n    dispatch(updatePackage(user.token, editData));\r\n  };\r\n\r\n  const changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const changeCount = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCount(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const addItem = () => {\r\n    if (title !== '' && count !== 0) {\r\n      const newItems = items.concat({ title, count });\r\n\r\n      setItems(newItems);\r\n      setCount(1);\r\n      setTitle('');\r\n    }\r\n  };\r\n\r\n  const delItem = (index: number) => {\r\n    const newItems = items.filter((el, i) => i !== index);\r\n    setItems(newItems);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    closeModal();\r\n  };\r\n\r\n  const removePackage = () => {\r\n    dispatch(deletePackage(user.token, data._id));\r\n    closeModal(true);\r\n  };\r\n  // const suggestions = locationsState.locations.map(loc => ({\r\n  //   label: loc.title\r\n  // }));\r\n\r\n  return (\r\n    <form\r\n      id=\"form-create\"\r\n      className={styles.container}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n      <div className={styles.formContainer}>\r\n        <div className={styles.closeIcon}>\r\n          <h2>Опись отправления (редактирование)</h2>\r\n          <CloseIcon onClick={handleClose} />\r\n        </div>\r\n\r\n        {readOnly.status ? (\r\n          <div>\r\n            <span>Адрес получателя:</span>\r\n            <h3>{reciverId}</h3>\r\n            <span>Первый транзитный пункт:</span>\r\n            <h3>{sendLocIdTitle}</h3>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Autocomplete\r\n              freeSolo\r\n              id=\"reciverId\"\r\n              disableClearable\r\n              value={reciverId}\r\n              onChange={changeReciverId}\r\n              options={locationsState.locations.map(option => option.title)}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Адрес получателя\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Введите адрес\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n            <Autocomplete\r\n              freeSolo\r\n              id=\"changeSendLocId\"\r\n              disableClearable\r\n              value={sendLocIdTitle}\r\n              onChange={changeSendLocId}\r\n              options={locationsState.locations.map(option => option.title)}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Первый транзитный пункт\"\r\n                  placeholder=\"Введите адрес\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          <span>Опись вложения:</span>\r\n          {!readOnly.status && (\r\n            <div className={styles.itemInput}>\r\n              <TextField\r\n                id=\"outlined-login\"\r\n                label=\"Номенклатура\"\r\n                className={styles.textFieldTitle}\r\n                value={title}\r\n                onChange={changeTitle}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-login\"\r\n                label=\"шт.\"\r\n                type=\"number\"\r\n                className={styles.textFieldCount}\r\n                value={count}\r\n                onChange={changeCount}\r\n                variant=\"outlined\"\r\n              />\r\n              <AddCircle\r\n                color=\"secondary\"\r\n                className={styles.icon}\r\n                fontSize=\"large\"\r\n                onClick={addItem}\r\n              />\r\n            </div>\r\n          )}\r\n          <List\r\n            component=\"nav\"\r\n            aria-label=\"secondary mailbox folders\"\r\n            style={{ maxHeight: 300, overflow: 'auto' }}\r\n          >\r\n            {items.map((item, i: number) => (\r\n              <ListItem key={`item_${i}`}>\r\n                <ListItemText primary={item.title} />\r\n\r\n                <div className={styles.count}>{item.count}</div>\r\n\r\n                {!readOnly.status && <CancelIcon onClick={() => delItem(i)} />}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n        {!readOnly.status && (\r\n          <div className={styles.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={styles.qrElement}\r\n              onClick={removePackage}\r\n            >\r\n              Удалить\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={styles.button}\r\n              onClick={sendData}\r\n            >\r\n              изменить\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ModalFormEdit;\r\n","import moment from 'moment';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Done from '@material-ui/icons/Done';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Package, PackageType } from 'redux/reducers/packages/types';\r\nimport { getAuth } from 'redux/reducers/auth/selectors';\r\nimport {\r\n  getPackages,\r\n  clearModalStart,\r\n  changeColumnsVisible\r\n} from 'redux/reducers/packages/actions';\r\nimport { getPackagesFromState } from 'redux/reducers/packages/selectors';\r\nimport BarcodeModal from 'containers/Packages/BarcodeModal';\r\nimport Error from 'components/Error';\r\nimport CreatePackageModal from 'containers/Packages/CreatePackageModal';\r\nimport { allColumns } from 'constants/packages';\r\nimport useReactRouter from 'use-react-router';\r\nimport { clearQRcode } from 'redux/reducers/qrCode/actions';\r\n\r\nimport EditPackageModal from './EditPackageModal';\r\nimport styles from './Packages.module.scss';\r\n\r\nexport default function Packages() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(getAuth);\r\n  const data: PackageType = useSelector(getPackagesFromState);\r\n\r\n  const [modalData, setModalData] = useState({\r\n    location: '',\r\n    reciveLoc: '',\r\n    id: ''\r\n  });\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalEdit, setShowEditModal] = useState(false);\r\n  const [showModalCreate, setShowModalCreate] = useState(false);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const { history } = useReactRouter();\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseColumns = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const changeColumnsView = (column: string) => {\r\n    let newColumns = [];\r\n\r\n    if (data.columns.includes(column)) {\r\n      newColumns = data.columns.filter(cl => cl !== column);\r\n    } else {\r\n      newColumns = data.columns.slice();\r\n      newColumns.push(column);\r\n    }\r\n    dispatch(changeColumnsVisible(newColumns));\r\n  };\r\n\r\n  const checkColumn = (column: string) => {\r\n    return data.columns.includes(column);\r\n  };\r\n\r\n  const fetchData = (skip: number, limit: number) => {\r\n    dispatch(getPackages(auth.user.token, skip, limit));\r\n  };\r\n\r\n  // edit modal\r\n  const handleOpenEdit = (index: number) => {\r\n    setCurrentIndex(index);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const closeEdit = () => {\r\n    setShowEditModal(false);\r\n    fetchData(0, rowsPerPage);\r\n  };\r\n\r\n  // modal\r\n  const handleOpenModalBarcode = async (packageItem: Package) => {\r\n    setModalData({\r\n      id: packageItem._id,\r\n      location: packageItem.sendLocationId && packageItem.sendLocationId.title,\r\n      reciveLoc: packageItem.reciverId && packageItem.reciverId.title\r\n    });\r\n\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setModalData({\r\n      location: '',\r\n      reciveLoc: '',\r\n      id: ''\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!showModal) {\r\n      dispatch(clearModalStart());\r\n      dispatch(clearQRcode());\r\n    }\r\n  }, [showModal]);\r\n  //---------\r\n\r\n  const converStatus = (status: string) => {\r\n    if (status === 'inProcess') {\r\n      return 'отправлено';\r\n    }\r\n    if (status === 'accepted') {\r\n      return 'принято';\r\n    }\r\n    if (status === 'notSent') {\r\n      return 'не отправлено';\r\n    }\r\n    return status;\r\n  };\r\n\r\n  const setClassnameIventory = (i: number) => {\r\n    if (i % 2 !== 0) {\r\n      return styles.rowGrey;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const statusClass = (status: string): string => {\r\n    if (status === 'accepted' || status.toLowerCase() === 'доставлено') {\r\n      return styles.StatusDelivered;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n    fetchData(newPage * rowsPerPage, rowsPerPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const rows = parseInt(event.target.value, 10);\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n    fetchData(page * rows, rows);\r\n  };\r\n\r\n  // create modal\r\n  const openCreateModal = () => {\r\n    setShowModalCreate(true);\r\n  };\r\n\r\n  const closeCreateModal = () => {\r\n    setShowModalCreate(false);\r\n\r\n    setTimeout(() => fetchData(page * rowsPerPage, rowsPerPage), 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data.packages.length && !data.error) {\r\n      fetchData(0, rowsPerPage);\r\n    }\r\n  }, [data.packages]);\r\n\r\n  useEffect(() => {\r\n    if (!auth.user.token) {\r\n      history.push('/login');\r\n    }\r\n  }, [auth]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {data.loading ? (\r\n        <div className={styles.spiner}>\r\n          <CircularProgress />\r\n          {!data.loading && data.error && (\r\n            <Error msg=\"Не удалось загрузить данные\" />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className={styles.buttonGroup}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={openCreateModal}\r\n            >\r\n              Создать отправление\r\n            </Button>\r\n            <Button\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n            >\r\n              <ViewColumn />\r\n            </Button>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleCloseColumns}\r\n            >\r\n              {allColumns.map((column, i) => (\r\n                <MenuItem\r\n                  onClick={() => changeColumnsView(column)}\r\n                  className={styles.menuItems}\r\n                  key={`menu_${i}`}\r\n                >\r\n                  <div className={styles.menuIcon}>\r\n                    {checkColumn(column) && <Done />}\r\n                  </div>\r\n                  <span>{column}</span>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </div>\r\n          <Paper className={styles.root}>\r\n            <Table\r\n              className={styles.table}\r\n              style={{ borderColor: 'black' }}\r\n              stickyHeader\r\n              aria-label=\"sticky table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  {checkColumn('Номер') && (\r\n                    <TableCell align=\"left\" className={styles.cellNumber}>\r\n                      Номер\r\n                    </TableCell>\r\n                  )}\r\n                  {checkColumn('Дата создания') && (\r\n                    <TableCell align=\"left\">Дата создания</TableCell>\r\n                  )}\r\n                  {checkColumn('Отправитель') && (\r\n                    <TableCell align=\"left\">Отправитель</TableCell>\r\n                  )}\r\n                  {checkColumn('Начальный получатель') && (\r\n                    <TableCell align=\"left\">Начальный получатель</TableCell>\r\n                  )}\r\n                  {checkColumn('Примечание') && (\r\n                    <TableCell align=\"left\">Примечание</TableCell>\r\n                  )}\r\n                  {checkColumn('Фактический получатель') && (\r\n                    <TableCell align=\"left\">Фактический получатель</TableCell>\r\n                  )}\r\n                  {checkColumn('Дата отправки') && (\r\n                    <TableCell align=\"left\">Дата отправки</TableCell>\r\n                  )}\r\n                  {checkColumn('Дата получения') && (\r\n                    <TableCell align=\"left\">Дата получения</TableCell>\r\n                  )}\r\n                  {checkColumn('Принял') && (\r\n                    <TableCell align=\"left\">Принял</TableCell>\r\n                  )}\r\n                  {checkColumn('Опись вложения') && (\r\n                    <TableCell align=\"left\">Опись вложения</TableCell>\r\n                  )}\r\n\r\n                  {checkColumn('Транзит') && (\r\n                    <TableCell align=\"left\">\r\n                      <div className={styles.transit}>\r\n                        <div className={styles.transitBlock1}>\r\n                          Транзитный получатель\r\n                        </div>\r\n                        <div className={styles.transitBlock1}>\r\n                          фактический транзитный получатель\r\n                        </div>\r\n                        <div className={styles.transitBlock2}>\r\n                          Дата отправки с транзитного склада\r\n                        </div>\r\n                        <div className={styles.transitBlock3}>Отправитель</div>\r\n                      </div>\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {checkColumn('Статус') && (\r\n                    <TableCell align=\"center\">Статус</TableCell>\r\n                  )}\r\n                  {checkColumn('Комментарий') && (\r\n                    <TableCell align=\"left\">Комментарий</TableCell>\r\n                  )}\r\n                  <TableCell align=\"left\">Действия</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.packages.map((packageItem, indexRow) => (\r\n                  <TableRow\r\n                    key={packageItem._id}\r\n                    className={setClassnameIventory(indexRow)}\r\n                  >\r\n                    {checkColumn('Номер') && (\r\n                      <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n                        {packageItem.number}\r\n                      </TableCell>\r\n                    )}\r\n                    {checkColumn('Дата создания') && (\r\n                      <TableCell align=\"left\">\r\n                        {moment(packageItem.created).format(\r\n                          'DD.MM.YYYY  HH:mm'\r\n                        )}\r\n                      </TableCell>\r\n                    )}\r\n                    {checkColumn('Отправитель') && (\r\n                      <TableCell align=\"left\">\r\n                        {packageItem.sendUserId && packageItem.sendUserId.name}\r\n                      </TableCell>\r\n                    )}\r\n                    {checkColumn('Начальный получатель') && (\r\n                      <TableCell align=\"left\">\r\n                        {packageItem.reciverId && packageItem.reciverId.title}\r\n                      </TableCell>\r\n                    )}\r\n                    {checkColumn('Примечание') && (\r\n                      <TableCell align=\"left\">\r\n                        {packageItem.note &&\r\n                          `ФИО ${packageItem.note.driverFullname} рег.номер ${packageItem.note.regNumber}`}\r\n                      </TableCell>\r\n                    )}\r\n                    {checkColumn('Фактический получатель') && (\r\n                      <TableCell align=\"left\">\r\n                        {packageItem.factReciverId &&\r\n                          packageItem.factReciverId.title}\r\n                      </TableCell>\r\n                    )}\r\n                    {checkColumn('Дата отправки') && (\r\n                      <TableCell align=\"left\">\r\n                        {packageItem.sendData &&\r\n                          moment(packageItem.sendData).format(\r\n                            'DD.MM.YYYY HH:mm'\r\n                          )}\r\n                      </TableCell>\r\n                    )}\r\n                    {checkColumn('Дата получения') && (\r\n                      <TableCell align=\"left\">\r\n                        {packageItem.reciveData &&\r\n                          moment(packageItem.reciveData).format(\r\n                            'DD.MM.YYYY  HH:mm'\r\n                          )}\r\n                      </TableCell>\r\n                    )}\r\n                    {checkColumn('Принял') && (\r\n                      <TableCell align=\"center\">\r\n                        {packageItem.recipientId &&\r\n                          packageItem.recipientId.name}\r\n                      </TableCell>\r\n                    )}\r\n\r\n                    {checkColumn('Опись вложения') && (\r\n                      <TableCell className={styles.cellInventory} align=\"left\">\r\n                        {packageItem.inventory.map((el, i) => (\r\n                          <div\r\n                            key={el._id}\r\n                            className={\r\n                              packageItem.inventory.length - 1 === i\r\n                                ? styles.lastList\r\n                                : styles.list\r\n                            }\r\n                          >\r\n                            <div>{el.title}</div>\r\n                            <div>({el.count})</div>\r\n                          </div>\r\n                        ))}\r\n                      </TableCell>\r\n                    )}\r\n\r\n                    {checkColumn('Транзит') && (\r\n                      <TableCell align=\"center\">\r\n                        {packageItem.transit.map((el, i) => (\r\n                          <div\r\n                            key={el._id}\r\n                            className={\r\n                              packageItem.transit.length - 1 === i\r\n                                ? styles.transitLastRow\r\n                                : styles.transitRow\r\n                            }\r\n                          >\r\n                            <div className={styles.transitBlock1}>\r\n                              {el.sendLocId && el.sendLocId.title}\r\n                            </div>\r\n                            <div className={styles.transitBlock1}>\r\n                              {el.sendfactLocId && el.sendfactLocId.title}\r\n                              {el.recivedDate && (\r\n                                <span>\r\n                                  {moment(el.recivedDate).format(\r\n                                    'DD.MM.YYYY  HH:mm'\r\n                                  )}\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                            <div className={styles.transitBlock3}>\r\n                              {el.date &&\r\n                                moment(el.date).format('DD.MM.YYYY  HH:mm')}\r\n                            </div>\r\n                            <div className={styles.transitBlock2}>\r\n                              {el.userId && el.userId.name}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </TableCell>\r\n                    )}\r\n\r\n                    {checkColumn('Статус') && (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        className={statusClass(packageItem.status)}\r\n                      >\r\n                        {converStatus(packageItem.status)}\r\n                      </TableCell>\r\n                    )}\r\n\r\n                    {checkColumn('Комментарий') && (\r\n                      <TableCell align=\"left\">{packageItem.comment}</TableCell>\r\n                    )}\r\n\r\n                    <TableCell align=\"center\">\r\n                      <div className={styles.actions}>\r\n                        {packageItem.status === 'notSent' &&\r\n                          auth.user.role ===\r\n                            'admin' && (\r\n                              <EditIcon\r\n                                className={styles.action}\r\n                                onClick={() => handleOpenEdit(indexRow)}\r\n                              />\r\n                            )}\r\n                        <FileIcon\r\n                          className={styles.action}\r\n                          onClick={() => handleOpenModalBarcode(packageItem)}\r\n                        />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={data.count}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"записей на странице\"\r\n            labelDisplayedRows={({ from, to, count }) =>\r\n              `${from}-${to === -1 ? count : to} из ${count}`\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        className={styles.modal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500\r\n        }}\r\n      >\r\n        <Fade in={showModal}>\r\n          <div>\r\n            <BarcodeModal data={modalData} closeModal={closeModal} />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={showModalEdit}\r\n        onClose={closeEdit}\r\n        className={styles.modal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500\r\n        }}\r\n      >\r\n        <Fade in={showModalEdit}>\r\n          <div id=\"modal-form\">\r\n            <EditPackageModal\r\n              data={data.packages[currentIndex]}\r\n              closeModal={closeEdit}\r\n            />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={showModalCreate}\r\n        onClose={closeCreateModal}\r\n        className={styles.modal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500\r\n        }}\r\n      >\r\n        <Fade in={showModalCreate}>\r\n          <div id=\"modal-form\">\r\n            <CreatePackageModal\r\n              create\r\n              closeModal={closeCreateModal}\r\n              auth={auth}\r\n            />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport styles from './LocationsModal.module.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAuth } from 'redux/reducers/auth/selectors';\r\nimport { addLocation, updateLocation } from 'redux/reducers/locations/actions';\r\n\r\ninterface LocationsModalFC {\r\n  closeModal: Function;\r\n  editLocation: {\r\n    _id: string;\r\n    title: string;\r\n  };\r\n}\r\n\r\nconst LocationsModal: React.FC<LocationsModalFC> = ({\r\n  closeModal,\r\n  editLocation\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(getAuth);\r\n\r\n  const edit = editLocation._id !== '';\r\n\r\n  const [title, setTitle] = useState(editLocation.title);\r\n  const [err, setErr] = useState(false);\r\n\r\n  const sendData = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!title) {\r\n      setErr(true);\r\n    } else {\r\n      if (edit) {\r\n        dispatch(\r\n          updateLocation(auth.user.token, { id: editLocation._id, title })\r\n        );\r\n        closeModal();\r\n      } else {\r\n        dispatch(addLocation(auth.user.token, { title }));\r\n        closeModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      id=\"form-create\"\r\n      className={styles.container}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n      <div className={styles.formContainer}>\r\n        <div className={styles.itemInput}>\r\n          <TextField\r\n            id=\"outlined-username\"\r\n            label=\"Название\"\r\n            type=\"text\"\r\n            className={styles.textField}\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n            variant=\"outlined\"\r\n            error={err}\r\n          />\r\n        </div>\r\n        <div className={styles.footer}>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={styles.button}\r\n            onClick={sendData}\r\n          >\r\n            {edit ? 'Изменить' : 'Создать'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LocationsModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LocationsModal from './LocationsModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getAuth } from 'redux/reducers/auth/selectors';\r\nimport { getLocationsFromState } from 'redux/reducers/locations/selectors';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Location } from 'redux/reducers/locations/types';\r\nimport { getLocations } from 'redux/reducers/locations/actions';\r\nimport styles from './Locations.module.scss';\r\n\r\nfunction Locations() {\r\n  const dispatch = useDispatch();\r\n  const LocationsData = useSelector(getLocationsFromState);\r\n  const auth = useSelector(getAuth);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [editLocation, setEditLocation] = useState({ _id: '', title: '' });\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOpenEdit = (\r\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\r\n    location: Location\r\n  ) => {\r\n    setEditLocation(location);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !LocationsData.error &&\r\n      !LocationsData.loading &&\r\n      LocationsData.locations.length === 0\r\n    ) {\r\n      dispatch(getLocations(auth.user.token, 0, 1000));\r\n    }\r\n  });\r\n\r\n  const setClassnameIventory = (i: number) => {\r\n    if (i % 2 !== 0) return styles.rowGrey;\r\n\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className={styles.locations}>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n        Создать локацию\r\n      </Button>\r\n\r\n      <Paper className={styles.root}>\r\n        <Table\r\n          className={styles.table}\r\n          style={{ borderColor: 'black' }}\r\n          size=\"small\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={styles.cellNumber}>Номер</TableCell>\r\n              <TableCell align=\"left\">Название</TableCell>\r\n              <TableCell align=\"left\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {LocationsData.locations.map((item, indexRow) => (\r\n              <TableRow\r\n                key={item._id}\r\n                className={setClassnameIventory(indexRow)}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {indexRow + 1}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{item.title}</TableCell>\r\n                <TableCell align=\"left\">\r\n                  <EditIcon\r\n                    onClick={e => handleOpenEdit(e, item)}\r\n                    className={styles.actionEdit}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div id=\"modal-qr\" className={styles.containerModal}>\r\n          <div className={styles.Modal}>\r\n            <div className={styles.headerModal}>\r\n              <Typography variant=\"h6\">\r\n                {editLocation._id !== ''\r\n                  ? 'Изменение локации'\r\n                  : 'Создание новой локации'}\r\n              </Typography>\r\n              <CloseIcon onClick={handleClose} />\r\n            </div>\r\n            <LocationsModal\r\n              closeModal={handleClose}\r\n              editLocation={editLocation}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default Locations;\r\n","import { AppState } from 'redux/store.type';\r\n\r\nexport const getUserFromState = (state: AppState) => state.users;\r\n","import { Button, TextField } from '@material-ui/core';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAuth } from 'redux/reducers/auth/selectors';\r\nimport { getLocationsFromState } from 'redux/reducers/locations/selectors';\r\nimport { getLocations } from 'redux/reducers/locations/actions';\r\nimport { addUser, updateUser } from 'redux/reducers/users/actions';\r\n\r\nimport { UserModal, EditUser } from './types';\r\nimport styles from './UserModal.module.scss';\r\n\r\nconst ModalForm: React.FC<UserModal> = ({ closeModal, editUser }) => {\r\n  const initialUser: EditUser = {\r\n    name: '',\r\n    nameErr: false,\r\n    login: '',\r\n    loginErr: false,\r\n    password: '',\r\n    pswErr: false,\r\n    phone: '',\r\n    role: 'user',\r\n    locationId: '',\r\n    locationIdErr: false\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const locationsData = useSelector(getLocationsFromState);\r\n  const auth = useSelector(getAuth);\r\n\r\n  const edit = editUser._id !== '';\r\n\r\n  if (edit) {\r\n    initialUser.name = editUser.name;\r\n    initialUser.login = editUser.login;\r\n    initialUser.phone = editUser.phone;\r\n    initialUser.role = editUser.role;\r\n    initialUser.locationId = editUser.locationId;\r\n  }\r\n  const [user, setUser] = useState(initialUser);\r\n\r\n  const inputLabel = React.useRef<HTMLLabelElement>(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    setLabelWidth(inputLabel.current!.offsetWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !locationsData.error &&\r\n      !locationsData.loading &&\r\n      !locationsData.locations.length\r\n    )\r\n      dispatch(getLocations(auth.user.token, 0, 1000));\r\n  }, [locationsData]);\r\n\r\n  const checkfill = () => {\r\n    return {\r\n      nameErr: user.name === '',\r\n      loginErr: user.login === '',\r\n      pswErr: user.password === '',\r\n      phoneErr: user.phone === '',\r\n      locationIdErr: user.locationId === ''\r\n    };\r\n  };\r\n\r\n  const sendData = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    const dataErr = checkfill();\r\n\r\n    if (\r\n      !edit &&\r\n      (dataErr.nameErr ||\r\n        dataErr.loginErr ||\r\n        dataErr.pswErr ||\r\n        dataErr.phoneErr)\r\n    ) {\r\n      setUser({ ...user, ...dataErr });\r\n    } else {\r\n      const newUser = {\r\n        name: user.name,\r\n        login: user.login,\r\n        password: user.password,\r\n        phone: user.phone,\r\n        role: user.role,\r\n        locationId: user.locationId\r\n      };\r\n\r\n      if (edit) {\r\n        dispatch(updateUser(auth.user.token, { ...newUser, id: editUser._id }));\r\n      } else {\r\n        dispatch(addUser(auth.user.token, newUser));\r\n      }\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const changeUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, name: event.target.value, nameErr: false });\r\n  };\r\n\r\n  const changeLogin = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, login: event.target.value, loginErr: false });\r\n  };\r\n\r\n  const changePassword = (event: React.ChangeEvent<{ value: string }>) => {\r\n    setUser({ ...user, password: event.target.value, pswErr: false });\r\n  };\r\n\r\n  const changePhone = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, phone: event.target.value });\r\n  };\r\n\r\n  const changeRole = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setUser({ ...user, role: `${event.target.value}` });\r\n  };\r\n\r\n  const changeLocation = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setUser({ ...user, locationId: `${event.target.value}` });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.modal}>\r\n      <div className={styles.headerModal}>\r\n        <Typography variant=\"h6\">\r\n          {editUser.hasOwnProperty('_id')\r\n            ? 'Изменение пользоваетеля'\r\n            : 'Создание нового пользователя'}\r\n        </Typography>\r\n        <CloseIcon onClick={handleClose} />\r\n      </div>\r\n      <form\r\n        id=\"form-create\"\r\n        className={styles.container}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className={styles.formContainer}>\r\n          <div className={styles.itemInput}>\r\n            <TextField\r\n              id=\"outlined-username\"\r\n              label=\"Имя пользователя\"\r\n              type=\"text\"\r\n              className={styles.textField}\r\n              value={user.name}\r\n              onChange={changeUsername}\r\n              variant=\"outlined\"\r\n              error={user.nameErr}\r\n            />\r\n            <TextField\r\n              id=\"outlined-login\"\r\n              label=\"Логин\"\r\n              type=\"text\"\r\n              className={styles.textField}\r\n              value={user.login}\r\n              onChange={changeLogin}\r\n              variant=\"outlined\"\r\n              error={user.loginErr}\r\n            />\r\n            <TextField\r\n              id=\"outlined-password\"\r\n              label={edit ? 'Новый пароль' : 'Пароль'}\r\n              type=\"text\"\r\n              className={styles.textField}\r\n              value={user.password}\r\n              onChange={changePassword}\r\n              variant=\"outlined\"\r\n              error={user.pswErr}\r\n            />\r\n            <TextField\r\n              id=\"outlined-phone\"\r\n              label=\"телефон\"\r\n              type=\"text\"\r\n              className={styles.textField}\r\n              value={user.phone}\r\n              onChange={changePhone}\r\n              variant=\"outlined\"\r\n            />\r\n            <div>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                className={styles.formControl}\r\n                error={user.locationIdErr}\r\n              >\r\n                <InputLabel ref={inputLabel}>Локация</InputLabel>\r\n                <Select\r\n                  value={user.locationId}\r\n                  onChange={changeLocation}\r\n                  labelWidth={labelWidth}\r\n                >\r\n                  {locationsData.locations &&\r\n                    locationsData.locations.map(option => (\r\n                      <MenuItem key={option.title} value={option.title}>\r\n                        {option.title}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={styles.formControl}>\r\n                <InputLabel ref={inputLabel}>Роль</InputLabel>\r\n                <Select\r\n                  value={user.role}\r\n                  onChange={changeRole}\r\n                  labelWidth={labelWidth}\r\n                >\r\n                  <MenuItem value=\"admin\">admin</MenuItem>\r\n                  <MenuItem value=\"user\">user</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n          <div className={styles.footer}>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={styles.button}\r\n              onClick={sendData}\r\n            >\r\n              {edit ? 'Изменить' : 'Создать'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n","import Modal from '@material-ui/core/Modal';\r\nimport { Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getUsers } from 'redux/reducers/users/actions';\r\nimport { getUserFromState } from 'redux/reducers/users/selectors';\r\nimport { User as UserType } from 'redux/reducers/users/types';\r\nimport { getAuth } from 'redux/reducers/auth/selectors';\r\n\r\nimport UsersModal from './UserModal';\r\nimport styles from './Users.module.scss';\r\n\r\nconst Users: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const usersData = useSelector(getUserFromState);\r\n  const auth = useSelector(getAuth);\r\n  const [open, setOpen] = useState(false);\r\n  const [editUser, setEditUser] = useState({\r\n    _id: '',\r\n    name: '',\r\n    login: '',\r\n    phone: '',\r\n    role: '',\r\n    locationId: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (usersData.users.length === 0) {\r\n      dispatch(getUsers(auth.user.token, 0, 1000));\r\n    }\r\n  });\r\n\r\n  const createNew = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEditUser({\r\n      _id: '',\r\n      name: '',\r\n      login: '',\r\n      phone: '',\r\n      role: '',\r\n      locationId: ''\r\n    });\r\n    setOpen(false);\r\n  };\r\n\r\n  const setClassnameIventory = (i: number) => {\r\n    if (i % 2 !== 0) return styles.rowGrey;\r\n\r\n    return '';\r\n  };\r\n\r\n  const showModal = (item: UserType) => {\r\n    setEditUser({ ...item, locationId: item.locationId.title });\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.users}>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={createNew}>\r\n        Создать пользователя\r\n      </Button>\r\n\r\n      <TableContainer component={Paper} className={styles.root}>\r\n        <Table\r\n          className={styles.table}\r\n          size=\"small\"\r\n          style={{ borderColor: 'black' }}\r\n          stickyHeader\r\n          aria-label=\"users table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\" className={styles.cellNumber}>\r\n                Номер\r\n              </TableCell>\r\n              <TableCell align=\"left\">Имя пользоваетля</TableCell>\r\n              <TableCell align=\"left\">Логин</TableCell>\r\n              <TableCell align=\"left\">Телефон</TableCell>\r\n              <TableCell align=\"left\">Роль</TableCell>\r\n              <TableCell align=\"left\">Локация</TableCell>\r\n              <TableCell align=\"left\" />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {usersData.users.map((item, indexRow) => (\r\n              <TableRow\r\n                key={`USER_${indexRow}`}\r\n                className={setClassnameIventory(indexRow)}\r\n              >\r\n                <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n                  {indexRow + 1}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{item.name}</TableCell>\r\n                <TableCell align=\"left\">{item.login}</TableCell>\r\n                <TableCell align=\"left\">{item.phone}</TableCell>\r\n                <TableCell align=\"left\">{item.role}</TableCell>\r\n                <TableCell align=\"left\">\r\n                  {item.locationId && item.locationId.title}\r\n                </TableCell>\r\n                <TableCell align=\"left\" className={styles.del}>\r\n                  <EditIcon\r\n                    onClick={() => showModal(item)}\r\n                    className={styles.actionEdit}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div id=\"modal-qr\" className={styles.containerModal}>\r\n          <UsersModal closeModal={handleClose} editUser={editUser} />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport NavBar from './containers/NavBar';\r\nimport Authentication from './containers/Authentication';\r\nimport Packages from './containers/Packages';\r\nimport Locations from './containers/Locations';\r\nimport Users from './containers/Users';\r\n\r\nimport './App.scss';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Packages />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Authentication />\r\n        </Route>\r\n        <Route path=\"/locations\">\r\n          <Locations />\r\n        </Route>\r\n        <Route path=\"/users\">\r\n          <Users />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Packages_container__FzCtT\",\"root\":\"Packages_root__30bwq\",\"rowGrey\":\"Packages_rowGrey__21THI\",\"cellNumber\":\"Packages_cellNumber__35bqs\",\"cellInventory\":\"Packages_cellInventory__WYutq\",\"buttonGroup\":\"Packages_buttonGroup__juZWn\",\"list\":\"Packages_list__26eli\",\"lastList\":\"Packages_lastList__eTKEd\",\"containerModal\":\"Packages_containerModal__2mhcT\",\"barcodeModal\":\"Packages_barcodeModal__3fjrY\",\"statusInProcess\":\"Packages_statusInProcess__3LEx_\",\"StatusDelivered\":\"Packages_StatusDelivered__2Y_-P\",\"iconClose\":\"Packages_iconClose__1XdwT\",\"transit\":\"Packages_transit__3rwrB\",\"transitRow\":\"Packages_transitRow__2J8TA\",\"transitLastRow\":\"Packages_transitLastRow__3qLFZ\",\"transitBlock1\":\"Packages_transitBlock1__39Pod\",\"transitBlock2\":\"Packages_transitBlock2__n7jlY\",\"transitBlock3\":\"Packages_transitBlock3__bPohI\",\"actions\":\"Packages_actions__1Mgsk\",\"action\":\"Packages_action__vUcR6\",\"pagination\":\"Packages_pagination__10Jxj\",\"spiner\":\"Packages_spiner__3wHZ9\",\"menuItems\":\"Packages_menuItems__1Nrom\",\"menuIcon\":\"Packages_menuIcon__3IrIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"UserModal_modal__3lOvg\",\"headerModal\":\"UserModal_headerModal__3FqvS\",\"container\":\"UserModal_container__2X6fU\",\"formContainer\":\"UserModal_formContainer__24wLe\",\"textField\":\"UserModal_textField__3SeZA\",\"icon\":\"UserModal_icon__hZMtH\",\"footer\":\"UserModal_footer__3Tgo2\",\"closeIcon\":\"UserModal_closeIcon__1EjJ1\",\"formControl\":\"UserModal_formControl__1YZvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditPackageModal_container__1jmU_\",\"formContainer\":\"EditPackageModal_formContainer__1BAWE\",\"textFieldTitle\":\"EditPackageModal_textFieldTitle__2eB8L\",\"textFieldCount\":\"EditPackageModal_textFieldCount__1emwB\",\"dense\":\"EditPackageModal_dense__IbMv1\",\"menu\":\"EditPackageModal_menu__1DJQZ\",\"inventory\":\"EditPackageModal_inventory__14MmO\",\"itemInput\":\"EditPackageModal_itemInput__2mPGD\",\"icon\":\"EditPackageModal_icon__1a0qp\",\"footer\":\"EditPackageModal_footer__3ZIvq\",\"count\":\"EditPackageModal_count__3Wceh\",\"closeIcon\":\"EditPackageModal_closeIcon__KHR8e\",\"qrBlock\":\"EditPackageModal_qrBlock__2qrJa\",\"qrElement\":\"EditPackageModal_qrElement__wjXIW\",\"qrNoPrint\":\"EditPackageModal_qrNoPrint__2oaUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreatePackageModal_container__2VNh-\",\"formContainer\":\"CreatePackageModal_formContainer__32tn4\",\"modal\":\"CreatePackageModal_modal__mbUdh\",\"textFieldTitle\":\"CreatePackageModal_textFieldTitle__2zT6S\",\"textFieldCount\":\"CreatePackageModal_textFieldCount__Di3Ic\",\"dense\":\"CreatePackageModal_dense__2l00r\",\"menu\":\"CreatePackageModal_menu__3TPLn\",\"inventory\":\"CreatePackageModal_inventory__1IvQT\",\"itemInput\":\"CreatePackageModal_itemInput__1qr1M\",\"icon\":\"CreatePackageModal_icon__2pDjC\",\"footer\":\"CreatePackageModal_footer__26THl\",\"count\":\"CreatePackageModal_count__3qMHd\",\"closeIcon\":\"CreatePackageModal_closeIcon__gdkec\",\"qrBlock\":\"CreatePackageModal_qrBlock__34l1d\",\"qrElement\":\"CreatePackageModal_qrElement__2o71N\",\"qrNoPrint\":\"CreatePackageModal_qrNoPrint__2n1A0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"locations\":\"Locations_locations__8o68p\",\"containerModal\":\"Locations_containerModal__2Reie\",\"Modal\":\"Locations_Modal__3un5t\",\"headerModal\":\"Locations_headerModal__SBHqC\",\"root\":\"Locations_root__2RaAQ\",\"table\":\"Locations_table__30neb\",\"rowGrey\":\"Locations_rowGrey__1LYCU\",\"cellNumber\":\"Locations_cellNumber__1v27q\",\"cellInventory\":\"Locations_cellInventory__lClR7\",\"inventory\":\"Locations_inventory__umlfz\",\"barcodeModal\":\"Locations_barcodeModal__2H_7I\",\"statusInProcess\":\"Locations_statusInProcess__2Krq3\",\"StatusDelivered\":\"Locations_StatusDelivered__HxHyU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3BT9_\",\"containerModal\":\"Users_containerModal__81L4S\",\"root\":\"Users_root__2E_oR\",\"table\":\"Users_table__2ga_9\",\"rowGrey\":\"Users_rowGrey__3W81V\",\"cellNumber\":\"Users_cellNumber__2B-uV\",\"cellInventory\":\"Users_cellInventory__3Y_DZ\",\"inventory\":\"Users_inventory__3kcBh\",\"barcodeModal\":\"Users_barcodeModal__214HF\",\"statusInProcess\":\"Users_statusInProcess__3BKQb\",\"StatusDelivered\":\"Users_StatusDelivered__3PKXd\",\"actionEdit\":\"Users_actionEdit__2-31q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LocationsModal_container__1gti1\",\"formContainer\":\"LocationsModal_formContainer__3hRIu\",\"textField\":\"LocationsModal_textField__3tGYB\",\"icon\":\"LocationsModal_icon__3-abE\",\"footer\":\"LocationsModal_footer__2aiUI\",\"closeIcon\":\"LocationsModal_closeIcon__hrhCs\",\"formControl\":\"LocationsModal_formControl__1iOQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NavBar_root__1bEZ9\",\"toolbar\":\"NavBar_toolbar__2Z-wc\",\"nav\":\"NavBar_nav__2AB6K\",\"tab\":\"NavBar_tab__274n5\",\"user\":\"NavBar_user__33-Lr\",\"title\":\"NavBar_title__1g2MQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Authentication_container__1PrJm\",\"textField\":\"Authentication_textField__3ZOSu\",\"button\":\"Authentication_button__1BAjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerModal\":\"BarcodeModal_containerModal__1pAxi\",\"barcodeModal\":\"BarcodeModal_barcodeModal__1uJww\",\"iconClose\":\"BarcodeModal_iconClose__3GLmc\"};"],"sourceRoot":""}